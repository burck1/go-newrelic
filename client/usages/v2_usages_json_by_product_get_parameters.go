// Code generated by go-swagger; DO NOT EDIT.

package usages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewV2UsagesJSONByProductGetParams creates a new V2UsagesJSONByProductGetParams object
// with the default values initialized.
func NewV2UsagesJSONByProductGetParams() *V2UsagesJSONByProductGetParams {
	var ()
	return &V2UsagesJSONByProductGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2UsagesJSONByProductGetParamsWithTimeout creates a new V2UsagesJSONByProductGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2UsagesJSONByProductGetParamsWithTimeout(timeout time.Duration) *V2UsagesJSONByProductGetParams {
	var ()
	return &V2UsagesJSONByProductGetParams{

		timeout: timeout,
	}
}

// NewV2UsagesJSONByProductGetParamsWithContext creates a new V2UsagesJSONByProductGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2UsagesJSONByProductGetParamsWithContext(ctx context.Context) *V2UsagesJSONByProductGetParams {
	var ()
	return &V2UsagesJSONByProductGetParams{

		Context: ctx,
	}
}

// NewV2UsagesJSONByProductGetParamsWithHTTPClient creates a new V2UsagesJSONByProductGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2UsagesJSONByProductGetParamsWithHTTPClient(client *http.Client) *V2UsagesJSONByProductGetParams {
	var ()
	return &V2UsagesJSONByProductGetParams{
		HTTPClient: client,
	}
}

/*V2UsagesJSONByProductGetParams contains all the parameters to send to the API endpoint
for the v2 usages Json by product get operation typically these are written to a http.Request
*/
type V2UsagesJSONByProductGetParams struct {

	/*EndDate
	  Format: YYYY-MM-DD

	*/
	EndDate strfmt.Date
	/*IncludeSubaccounts
	  Include subaccounts usage? (default: false)

	*/
	IncludeSubaccounts *bool
	/*Product
	  Available: apm, browser, mobile.

	*/
	Product string
	/*StartDate
	  Format: YYYY-MM-DD

	*/
	StartDate strfmt.Date

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) WithTimeout(timeout time.Duration) *V2UsagesJSONByProductGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) WithContext(ctx context.Context) *V2UsagesJSONByProductGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) WithHTTPClient(client *http.Client) *V2UsagesJSONByProductGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndDate adds the endDate to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) WithEndDate(endDate strfmt.Date) *V2UsagesJSONByProductGetParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) SetEndDate(endDate strfmt.Date) {
	o.EndDate = endDate
}

// WithIncludeSubaccounts adds the includeSubaccounts to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) WithIncludeSubaccounts(includeSubaccounts *bool) *V2UsagesJSONByProductGetParams {
	o.SetIncludeSubaccounts(includeSubaccounts)
	return o
}

// SetIncludeSubaccounts adds the includeSubaccounts to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) SetIncludeSubaccounts(includeSubaccounts *bool) {
	o.IncludeSubaccounts = includeSubaccounts
}

// WithProduct adds the product to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) WithProduct(product string) *V2UsagesJSONByProductGetParams {
	o.SetProduct(product)
	return o
}

// SetProduct adds the product to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) SetProduct(product string) {
	o.Product = product
}

// WithStartDate adds the startDate to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) WithStartDate(startDate strfmt.Date) *V2UsagesJSONByProductGetParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the v2 usages Json by product get params
func (o *V2UsagesJSONByProductGetParams) SetStartDate(startDate strfmt.Date) {
	o.StartDate = startDate
}

// WriteToRequest writes these params to a swagger request
func (o *V2UsagesJSONByProductGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param end_date
	qrEndDate := o.EndDate
	qEndDate := qrEndDate.String()
	if qEndDate != "" {
		if err := r.SetQueryParam("end_date", qEndDate); err != nil {
			return err
		}
	}

	if o.IncludeSubaccounts != nil {

		// query param include_subaccounts
		var qrIncludeSubaccounts bool
		if o.IncludeSubaccounts != nil {
			qrIncludeSubaccounts = *o.IncludeSubaccounts
		}
		qIncludeSubaccounts := swag.FormatBool(qrIncludeSubaccounts)
		if qIncludeSubaccounts != "" {
			if err := r.SetQueryParam("include_subaccounts", qIncludeSubaccounts); err != nil {
				return err
			}
		}

	}

	// path param product
	if err := r.SetPathParam("product", o.Product); err != nil {
		return err
	}

	// query param start_date
	qrStartDate := o.StartDate
	qStartDate := qrStartDate.String()
	if qStartDate != "" {
		if err := r.SetQueryParam("start_date", qStartDate); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
