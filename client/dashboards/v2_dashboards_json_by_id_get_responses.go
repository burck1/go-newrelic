// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2DashboardsJSONByIDGetReader is a Reader for the V2DashboardsJSONByIDGet structure.
type V2DashboardsJSONByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2DashboardsJSONByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2DashboardsJSONByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2DashboardsJSONByIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2DashboardsJSONByIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2DashboardsJSONByIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewV2DashboardsJSONByIDGetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2DashboardsJSONByIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2DashboardsJSONByIDGetOK creates a V2DashboardsJSONByIDGetOK with default headers values
func NewV2DashboardsJSONByIDGetOK() *V2DashboardsJSONByIDGetOK {
	return &V2DashboardsJSONByIDGetOK{}
}

/*V2DashboardsJSONByIDGetOK handles this case with default header values.

OK
*/
type V2DashboardsJSONByIDGetOK struct {
	Payload *models.DashboardResponse
}

func (o *V2DashboardsJSONByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdGetOK  %+v", 200, o.Payload)
}

func (o *V2DashboardsJSONByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DashboardResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDGetUnauthorized creates a V2DashboardsJSONByIDGetUnauthorized with default headers values
func NewV2DashboardsJSONByIDGetUnauthorized() *V2DashboardsJSONByIDGetUnauthorized {
	return &V2DashboardsJSONByIDGetUnauthorized{}
}

/*V2DashboardsJSONByIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2DashboardsJSONByIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2DashboardsJSONByIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDGetForbidden creates a V2DashboardsJSONByIDGetForbidden with default headers values
func NewV2DashboardsJSONByIDGetForbidden() *V2DashboardsJSONByIDGetForbidden {
	return &V2DashboardsJSONByIDGetForbidden{}
}

/*V2DashboardsJSONByIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2DashboardsJSONByIDGetForbidden struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2DashboardsJSONByIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDGetNotFound creates a V2DashboardsJSONByIDGetNotFound with default headers values
func NewV2DashboardsJSONByIDGetNotFound() *V2DashboardsJSONByIDGetNotFound {
	return &V2DashboardsJSONByIDGetNotFound{}
}

/*V2DashboardsJSONByIDGetNotFound handles this case with default header values.

Dashboard does not exist or is inaccessible
*/
type V2DashboardsJSONByIDGetNotFound struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdGetNotFound  %+v", 404, o.Payload)
}

func (o *V2DashboardsJSONByIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDGetServiceUnavailable creates a V2DashboardsJSONByIDGetServiceUnavailable with default headers values
func NewV2DashboardsJSONByIDGetServiceUnavailable() *V2DashboardsJSONByIDGetServiceUnavailable {
	return &V2DashboardsJSONByIDGetServiceUnavailable{}
}

/*V2DashboardsJSONByIDGetServiceUnavailable handles this case with default header values.

Service unavailable
*/
type V2DashboardsJSONByIDGetServiceUnavailable struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDGetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdGetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *V2DashboardsJSONByIDGetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDGetDefault creates a V2DashboardsJSONByIDGetDefault with default headers values
func NewV2DashboardsJSONByIDGetDefault(code int) *V2DashboardsJSONByIDGetDefault {
	return &V2DashboardsJSONByIDGetDefault{
		_statusCode: code,
	}
}

/*V2DashboardsJSONByIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2DashboardsJSONByIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 dashboards Json by Id get default response
func (o *V2DashboardsJSONByIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2DashboardsJSONByIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards/{dashboard_id}.json][%d] V2DashboardsJsonByIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2DashboardsJSONByIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
