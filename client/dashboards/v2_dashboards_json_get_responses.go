// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2DashboardsJSONGetReader is a Reader for the V2DashboardsJSONGet structure.
type V2DashboardsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2DashboardsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2DashboardsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewV2DashboardsJSONGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewV2DashboardsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2DashboardsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewV2DashboardsJSONGetServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2DashboardsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2DashboardsJSONGetOK creates a V2DashboardsJSONGetOK with default headers values
func NewV2DashboardsJSONGetOK() *V2DashboardsJSONGetOK {
	return &V2DashboardsJSONGetOK{}
}

/*V2DashboardsJSONGetOK handles this case with default header values.

OK
*/
type V2DashboardsJSONGetOK struct {
	Payload *models.DashboardResponse
}

func (o *V2DashboardsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards.json][%d] v2DashboardsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2DashboardsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DashboardResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONGetBadRequest creates a V2DashboardsJSONGetBadRequest with default headers values
func NewV2DashboardsJSONGetBadRequest() *V2DashboardsJSONGetBadRequest {
	return &V2DashboardsJSONGetBadRequest{}
}

/*V2DashboardsJSONGetBadRequest handles this case with default header values.

Provided page number is not 1 or higher
*/
type V2DashboardsJSONGetBadRequest struct {
	Payload interface{}
}

func (o *V2DashboardsJSONGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards.json][%d] v2DashboardsJsonGetBadRequest  %+v", 400, o.Payload)
}

func (o *V2DashboardsJSONGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONGetUnauthorized creates a V2DashboardsJSONGetUnauthorized with default headers values
func NewV2DashboardsJSONGetUnauthorized() *V2DashboardsJSONGetUnauthorized {
	return &V2DashboardsJSONGetUnauthorized{}
}

/*V2DashboardsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2DashboardsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2DashboardsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards.json][%d] v2DashboardsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2DashboardsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONGetForbidden creates a V2DashboardsJSONGetForbidden with default headers values
func NewV2DashboardsJSONGetForbidden() *V2DashboardsJSONGetForbidden {
	return &V2DashboardsJSONGetForbidden{}
}

/*V2DashboardsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2DashboardsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2DashboardsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards.json][%d] v2DashboardsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2DashboardsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONGetServiceUnavailable creates a V2DashboardsJSONGetServiceUnavailable with default headers values
func NewV2DashboardsJSONGetServiceUnavailable() *V2DashboardsJSONGetServiceUnavailable {
	return &V2DashboardsJSONGetServiceUnavailable{}
}

/*V2DashboardsJSONGetServiceUnavailable handles this case with default header values.

Service unavailable
*/
type V2DashboardsJSONGetServiceUnavailable struct {
	Payload interface{}
}

func (o *V2DashboardsJSONGetServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards.json][%d] v2DashboardsJsonGetServiceUnavailable  %+v", 503, o.Payload)
}

func (o *V2DashboardsJSONGetServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONGetDefault creates a V2DashboardsJSONGetDefault with default headers values
func NewV2DashboardsJSONGetDefault(code int) *V2DashboardsJSONGetDefault {
	return &V2DashboardsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2DashboardsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2DashboardsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 dashboards Json get default response
func (o *V2DashboardsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2DashboardsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/dashboards.json][%d] V2DashboardsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2DashboardsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
