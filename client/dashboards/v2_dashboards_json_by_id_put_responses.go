// Code generated by go-swagger; DO NOT EDIT.

package dashboards

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2DashboardsJSONByIDPutReader is a Reader for the V2DashboardsJSONByIDPut structure.
type V2DashboardsJSONByIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2DashboardsJSONByIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2DashboardsJSONByIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewV2DashboardsJSONByIDPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewV2DashboardsJSONByIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2DashboardsJSONByIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2DashboardsJSONByIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewV2DashboardsJSONByIDPutServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2DashboardsJSONByIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2DashboardsJSONByIDPutOK creates a V2DashboardsJSONByIDPutOK with default headers values
func NewV2DashboardsJSONByIDPutOK() *V2DashboardsJSONByIDPutOK {
	return &V2DashboardsJSONByIDPutOK{}
}

/*V2DashboardsJSONByIDPutOK handles this case with default header values.

OK
*/
type V2DashboardsJSONByIDPutOK struct {
	Payload *models.DashboardResponse
}

func (o *V2DashboardsJSONByIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdPutOK  %+v", 200, o.Payload)
}

func (o *V2DashboardsJSONByIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DashboardResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDPutBadRequest creates a V2DashboardsJSONByIDPutBadRequest with default headers values
func NewV2DashboardsJSONByIDPutBadRequest() *V2DashboardsJSONByIDPutBadRequest {
	return &V2DashboardsJSONByIDPutBadRequest{}
}

/*V2DashboardsJSONByIDPutBadRequest handles this case with default header values.

Dashboard payload failed validation
*/
type V2DashboardsJSONByIDPutBadRequest struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdPutBadRequest  %+v", 400, o.Payload)
}

func (o *V2DashboardsJSONByIDPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDPutUnauthorized creates a V2DashboardsJSONByIDPutUnauthorized with default headers values
func NewV2DashboardsJSONByIDPutUnauthorized() *V2DashboardsJSONByIDPutUnauthorized {
	return &V2DashboardsJSONByIDPutUnauthorized{}
}

/*V2DashboardsJSONByIDPutUnauthorized handles this case with default header values.

Invalid API key
*/
type V2DashboardsJSONByIDPutUnauthorized struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *V2DashboardsJSONByIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDPutForbidden creates a V2DashboardsJSONByIDPutForbidden with default headers values
func NewV2DashboardsJSONByIDPutForbidden() *V2DashboardsJSONByIDPutForbidden {
	return &V2DashboardsJSONByIDPutForbidden{}
}

/*V2DashboardsJSONByIDPutForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2DashboardsJSONByIDPutForbidden struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdPutForbidden  %+v", 403, o.Payload)
}

func (o *V2DashboardsJSONByIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDPutNotFound creates a V2DashboardsJSONByIDPutNotFound with default headers values
func NewV2DashboardsJSONByIDPutNotFound() *V2DashboardsJSONByIDPutNotFound {
	return &V2DashboardsJSONByIDPutNotFound{}
}

/*V2DashboardsJSONByIDPutNotFound handles this case with default header values.

Dashboard does not exist or is inaccessible
*/
type V2DashboardsJSONByIDPutNotFound struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdPutNotFound  %+v", 404, o.Payload)
}

func (o *V2DashboardsJSONByIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDPutServiceUnavailable creates a V2DashboardsJSONByIDPutServiceUnavailable with default headers values
func NewV2DashboardsJSONByIDPutServiceUnavailable() *V2DashboardsJSONByIDPutServiceUnavailable {
	return &V2DashboardsJSONByIDPutServiceUnavailable{}
}

/*V2DashboardsJSONByIDPutServiceUnavailable handles this case with default header values.

Service unavailable
*/
type V2DashboardsJSONByIDPutServiceUnavailable struct {
	Payload interface{}
}

func (o *V2DashboardsJSONByIDPutServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /v2/dashboards/{dashboard_id}.json][%d] v2DashboardsJsonByIdPutServiceUnavailable  %+v", 503, o.Payload)
}

func (o *V2DashboardsJSONByIDPutServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2DashboardsJSONByIDPutDefault creates a V2DashboardsJSONByIDPutDefault with default headers values
func NewV2DashboardsJSONByIDPutDefault(code int) *V2DashboardsJSONByIDPutDefault {
	return &V2DashboardsJSONByIDPutDefault{
		_statusCode: code,
	}
}

/*V2DashboardsJSONByIDPutDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2DashboardsJSONByIDPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 dashboards Json by Id put default response
func (o *V2DashboardsJSONByIDPutDefault) Code() int {
	return o._statusCode
}

func (o *V2DashboardsJSONByIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /v2/dashboards/{dashboard_id}.json][%d] V2DashboardsJsonByIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *V2DashboardsJSONByIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
