// Code generated by go-swagger; DO NOT EDIT.

package alerts_synthetics_conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsSyntheticsConditionsJSONByIDPutReader is a Reader for the V2AlertsSyntheticsConditionsJSONByIDPut structure.
type V2AlertsSyntheticsConditionsJSONByIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsSyntheticsConditionsJSONByIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsSyntheticsConditionsJSONByIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsSyntheticsConditionsJSONByIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsSyntheticsConditionsJSONByIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsSyntheticsConditionsJSONByIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 406:
		result := NewV2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsSyntheticsConditionsJSONByIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsSyntheticsConditionsJSONByIDPutOK creates a V2AlertsSyntheticsConditionsJSONByIDPutOK with default headers values
func NewV2AlertsSyntheticsConditionsJSONByIDPutOK() *V2AlertsSyntheticsConditionsJSONByIDPutOK {
	return &V2AlertsSyntheticsConditionsJSONByIDPutOK{}
}

/*V2AlertsSyntheticsConditionsJSONByIDPutOK handles this case with default header values.

OK
*/
type V2AlertsSyntheticsConditionsJSONByIDPutOK struct {
	Payload *models.SyntheticsConditionResponse
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_synthetics_conditions/{condition_id}.json][%d] v2AlertsSyntheticsConditionsJsonByIdPutOK  %+v", 200, o.Payload)
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SyntheticsConditionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsSyntheticsConditionsJSONByIDPutUnauthorized creates a V2AlertsSyntheticsConditionsJSONByIDPutUnauthorized with default headers values
func NewV2AlertsSyntheticsConditionsJSONByIDPutUnauthorized() *V2AlertsSyntheticsConditionsJSONByIDPutUnauthorized {
	return &V2AlertsSyntheticsConditionsJSONByIDPutUnauthorized{}
}

/*V2AlertsSyntheticsConditionsJSONByIDPutUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsSyntheticsConditionsJSONByIDPutUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_synthetics_conditions/{condition_id}.json][%d] v2AlertsSyntheticsConditionsJsonByIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsSyntheticsConditionsJSONByIDPutForbidden creates a V2AlertsSyntheticsConditionsJSONByIDPutForbidden with default headers values
func NewV2AlertsSyntheticsConditionsJSONByIDPutForbidden() *V2AlertsSyntheticsConditionsJSONByIDPutForbidden {
	return &V2AlertsSyntheticsConditionsJSONByIDPutForbidden{}
}

/*V2AlertsSyntheticsConditionsJSONByIDPutForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsSyntheticsConditionsJSONByIDPutForbidden struct {
	Payload interface{}
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_synthetics_conditions/{condition_id}.json][%d] v2AlertsSyntheticsConditionsJsonByIdPutForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsSyntheticsConditionsJSONByIDPutNotFound creates a V2AlertsSyntheticsConditionsJSONByIDPutNotFound with default headers values
func NewV2AlertsSyntheticsConditionsJSONByIDPutNotFound() *V2AlertsSyntheticsConditionsJSONByIDPutNotFound {
	return &V2AlertsSyntheticsConditionsJSONByIDPutNotFound{}
}

/*V2AlertsSyntheticsConditionsJSONByIDPutNotFound handles this case with default header values.

No Alerts condition was found with the given ID
*/
type V2AlertsSyntheticsConditionsJSONByIDPutNotFound struct {
	Payload interface{}
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_synthetics_conditions/{condition_id}.json][%d] v2AlertsSyntheticsConditionsJsonByIdPutNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable creates a V2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable with default headers values
func NewV2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable() *V2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable {
	return &V2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable{}
}

/*V2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable handles this case with default header values.

Bad entity type
*/
type V2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable struct {
	Payload interface{}
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_synthetics_conditions/{condition_id}.json][%d] v2AlertsSyntheticsConditionsJsonByIdPutNotAcceptable  %+v", 406, o.Payload)
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity creates a V2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity with default headers values
func NewV2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity() *V2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity {
	return &V2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity{}
}

/*V2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity handles this case with default header values.

Validation error occurred while trying to update the alert condition
*/
type V2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_synthetics_conditions/{condition_id}.json][%d] v2AlertsSyntheticsConditionsJsonByIdPutUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsSyntheticsConditionsJSONByIDPutDefault creates a V2AlertsSyntheticsConditionsJSONByIDPutDefault with default headers values
func NewV2AlertsSyntheticsConditionsJSONByIDPutDefault(code int) *V2AlertsSyntheticsConditionsJSONByIDPutDefault {
	return &V2AlertsSyntheticsConditionsJSONByIDPutDefault{
		_statusCode: code,
	}
}

/*V2AlertsSyntheticsConditionsJSONByIDPutDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsSyntheticsConditionsJSONByIDPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts synthetics conditions Json by Id put default response
func (o *V2AlertsSyntheticsConditionsJSONByIDPutDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_synthetics_conditions/{condition_id}.json][%d] V2AlertsSyntheticsConditionsJsonByIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsSyntheticsConditionsJSONByIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
