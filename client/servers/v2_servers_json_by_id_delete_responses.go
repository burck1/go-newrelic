// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ServersJSONByIDDeleteReader is a Reader for the V2ServersJSONByIDDelete structure.
type V2ServersJSONByIDDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ServersJSONByIDDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ServersJSONByIDDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ServersJSONByIDDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ServersJSONByIDDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2ServersJSONByIDDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewV2ServersJSONByIDDeleteConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ServersJSONByIDDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ServersJSONByIDDeleteOK creates a V2ServersJSONByIDDeleteOK with default headers values
func NewV2ServersJSONByIDDeleteOK() *V2ServersJSONByIDDeleteOK {
	return &V2ServersJSONByIDDeleteOK{}
}

/*V2ServersJSONByIDDeleteOK handles this case with default header values.

OK
*/
type V2ServersJSONByIDDeleteOK struct {
	Payload *models.ServerResponse
}

func (o *V2ServersJSONByIDDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /v2/servers/{server_id}.json][%d] v2ServersJsonByIdDeleteOK  %+v", 200, o.Payload)
}

func (o *V2ServersJSONByIDDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONByIDDeleteUnauthorized creates a V2ServersJSONByIDDeleteUnauthorized with default headers values
func NewV2ServersJSONByIDDeleteUnauthorized() *V2ServersJSONByIDDeleteUnauthorized {
	return &V2ServersJSONByIDDeleteUnauthorized{}
}

/*V2ServersJSONByIDDeleteUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ServersJSONByIDDeleteUnauthorized struct {
	Payload interface{}
}

func (o *V2ServersJSONByIDDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v2/servers/{server_id}.json][%d] v2ServersJsonByIdDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ServersJSONByIDDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONByIDDeleteForbidden creates a V2ServersJSONByIDDeleteForbidden with default headers values
func NewV2ServersJSONByIDDeleteForbidden() *V2ServersJSONByIDDeleteForbidden {
	return &V2ServersJSONByIDDeleteForbidden{}
}

/*V2ServersJSONByIDDeleteForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ServersJSONByIDDeleteForbidden struct {
	Payload interface{}
}

func (o *V2ServersJSONByIDDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v2/servers/{server_id}.json][%d] v2ServersJsonByIdDeleteForbidden  %+v", 403, o.Payload)
}

func (o *V2ServersJSONByIDDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONByIDDeleteNotFound creates a V2ServersJSONByIDDeleteNotFound with default headers values
func NewV2ServersJSONByIDDeleteNotFound() *V2ServersJSONByIDDeleteNotFound {
	return &V2ServersJSONByIDDeleteNotFound{}
}

/*V2ServersJSONByIDDeleteNotFound handles this case with default header values.

No Server found with the given ID
*/
type V2ServersJSONByIDDeleteNotFound struct {
	Payload interface{}
}

func (o *V2ServersJSONByIDDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v2/servers/{server_id}.json][%d] v2ServersJsonByIdDeleteNotFound  %+v", 404, o.Payload)
}

func (o *V2ServersJSONByIDDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONByIDDeleteConflict creates a V2ServersJSONByIDDeleteConflict with default headers values
func NewV2ServersJSONByIDDeleteConflict() *V2ServersJSONByIDDeleteConflict {
	return &V2ServersJSONByIDDeleteConflict{}
}

/*V2ServersJSONByIDDeleteConflict handles this case with default header values.

Cannot delete a Server that is still reporting data.
*/
type V2ServersJSONByIDDeleteConflict struct {
	Payload interface{}
}

func (o *V2ServersJSONByIDDeleteConflict) Error() string {
	return fmt.Sprintf("[DELETE /v2/servers/{server_id}.json][%d] v2ServersJsonByIdDeleteConflict  %+v", 409, o.Payload)
}

func (o *V2ServersJSONByIDDeleteConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONByIDDeleteDefault creates a V2ServersJSONByIDDeleteDefault with default headers values
func NewV2ServersJSONByIDDeleteDefault(code int) *V2ServersJSONByIDDeleteDefault {
	return &V2ServersJSONByIDDeleteDefault{
		_statusCode: code,
	}
}

/*V2ServersJSONByIDDeleteDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ServersJSONByIDDeleteDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 servers Json by Id delete default response
func (o *V2ServersJSONByIDDeleteDefault) Code() int {
	return o._statusCode
}

func (o *V2ServersJSONByIDDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /v2/servers/{server_id}.json][%d] V2ServersJsonByIdDelete default  %+v", o._statusCode, o.Payload)
}

func (o *V2ServersJSONByIDDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
