// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ServersMetricsJSONByServerIDGetReader is a Reader for the V2ServersMetricsJSONByServerIDGet structure.
type V2ServersMetricsJSONByServerIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ServersMetricsJSONByServerIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ServersMetricsJSONByServerIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ServersMetricsJSONByServerIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ServersMetricsJSONByServerIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ServersMetricsJSONByServerIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ServersMetricsJSONByServerIDGetOK creates a V2ServersMetricsJSONByServerIDGetOK with default headers values
func NewV2ServersMetricsJSONByServerIDGetOK() *V2ServersMetricsJSONByServerIDGetOK {
	return &V2ServersMetricsJSONByServerIDGetOK{}
}

/*V2ServersMetricsJSONByServerIDGetOK handles this case with default header values.

OK
*/
type V2ServersMetricsJSONByServerIDGetOK struct {
	Payload *models.MetricParserResponse
}

func (o *V2ServersMetricsJSONByServerIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/servers/{server_id}/metrics.json][%d] v2ServersMetricsJsonByServerIdGetOK  %+v", 200, o.Payload)
}

func (o *V2ServersMetricsJSONByServerIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetricParserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersMetricsJSONByServerIDGetUnauthorized creates a V2ServersMetricsJSONByServerIDGetUnauthorized with default headers values
func NewV2ServersMetricsJSONByServerIDGetUnauthorized() *V2ServersMetricsJSONByServerIDGetUnauthorized {
	return &V2ServersMetricsJSONByServerIDGetUnauthorized{}
}

/*V2ServersMetricsJSONByServerIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ServersMetricsJSONByServerIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2ServersMetricsJSONByServerIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/servers/{server_id}/metrics.json][%d] v2ServersMetricsJsonByServerIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ServersMetricsJSONByServerIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersMetricsJSONByServerIDGetForbidden creates a V2ServersMetricsJSONByServerIDGetForbidden with default headers values
func NewV2ServersMetricsJSONByServerIDGetForbidden() *V2ServersMetricsJSONByServerIDGetForbidden {
	return &V2ServersMetricsJSONByServerIDGetForbidden{}
}

/*V2ServersMetricsJSONByServerIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ServersMetricsJSONByServerIDGetForbidden struct {
	Payload interface{}
}

func (o *V2ServersMetricsJSONByServerIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/servers/{server_id}/metrics.json][%d] v2ServersMetricsJsonByServerIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2ServersMetricsJSONByServerIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersMetricsJSONByServerIDGetDefault creates a V2ServersMetricsJSONByServerIDGetDefault with default headers values
func NewV2ServersMetricsJSONByServerIDGetDefault(code int) *V2ServersMetricsJSONByServerIDGetDefault {
	return &V2ServersMetricsJSONByServerIDGetDefault{
		_statusCode: code,
	}
}

/*V2ServersMetricsJSONByServerIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ServersMetricsJSONByServerIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 servers metrics Json by server Id get default response
func (o *V2ServersMetricsJSONByServerIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2ServersMetricsJSONByServerIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/servers/{server_id}/metrics.json][%d] V2ServersMetricsJsonByServerIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2ServersMetricsJSONByServerIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
