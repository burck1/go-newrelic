// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ServersJSONGetReader is a Reader for the V2ServersJSONGet structure.
type V2ServersJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ServersJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ServersJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ServersJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ServersJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ServersJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ServersJSONGetOK creates a V2ServersJSONGetOK with default headers values
func NewV2ServersJSONGetOK() *V2ServersJSONGetOK {
	return &V2ServersJSONGetOK{}
}

/*V2ServersJSONGetOK handles this case with default header values.

OK
*/
type V2ServersJSONGetOK struct {
	Payload *models.ServerResponse
}

func (o *V2ServersJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/servers.json][%d] v2ServersJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2ServersJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONGetUnauthorized creates a V2ServersJSONGetUnauthorized with default headers values
func NewV2ServersJSONGetUnauthorized() *V2ServersJSONGetUnauthorized {
	return &V2ServersJSONGetUnauthorized{}
}

/*V2ServersJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ServersJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2ServersJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/servers.json][%d] v2ServersJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ServersJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONGetForbidden creates a V2ServersJSONGetForbidden with default headers values
func NewV2ServersJSONGetForbidden() *V2ServersJSONGetForbidden {
	return &V2ServersJSONGetForbidden{}
}

/*V2ServersJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ServersJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2ServersJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/servers.json][%d] v2ServersJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2ServersJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ServersJSONGetDefault creates a V2ServersJSONGetDefault with default headers values
func NewV2ServersJSONGetDefault(code int) *V2ServersJSONGetDefault {
	return &V2ServersJSONGetDefault{
		_statusCode: code,
	}
}

/*V2ServersJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ServersJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 servers Json get default response
func (o *V2ServersJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2ServersJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/servers.json][%d] V2ServersJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2ServersJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
