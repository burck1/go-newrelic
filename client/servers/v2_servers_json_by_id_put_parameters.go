// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// NewV2ServersJSONByIDPutParams creates a new V2ServersJSONByIDPutParams object
// with the default values initialized.
func NewV2ServersJSONByIDPutParams() *V2ServersJSONByIDPutParams {
	var ()
	return &V2ServersJSONByIDPutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2ServersJSONByIDPutParamsWithTimeout creates a new V2ServersJSONByIDPutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2ServersJSONByIDPutParamsWithTimeout(timeout time.Duration) *V2ServersJSONByIDPutParams {
	var ()
	return &V2ServersJSONByIDPutParams{

		timeout: timeout,
	}
}

// NewV2ServersJSONByIDPutParamsWithContext creates a new V2ServersJSONByIDPutParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2ServersJSONByIDPutParamsWithContext(ctx context.Context) *V2ServersJSONByIDPutParams {
	var ()
	return &V2ServersJSONByIDPutParams{

		Context: ctx,
	}
}

// NewV2ServersJSONByIDPutParamsWithHTTPClient creates a new V2ServersJSONByIDPutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2ServersJSONByIDPutParamsWithHTTPClient(client *http.Client) *V2ServersJSONByIDPutParams {
	var ()
	return &V2ServersJSONByIDPutParams{
		HTTPClient: client,
	}
}

/*V2ServersJSONByIDPutParams contains all the parameters to send to the API endpoint
for the v2 servers Json by Id put operation typically these are written to a http.Request
*/
type V2ServersJSONByIDPutParams struct {

	/*Server
	  New name of the server

	*/
	Server *models.Server
	/*ServerID
	  Server ID

	*/
	ServerID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) WithTimeout(timeout time.Duration) *V2ServersJSONByIDPutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) WithContext(ctx context.Context) *V2ServersJSONByIDPutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) WithHTTPClient(client *http.Client) *V2ServersJSONByIDPutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServer adds the server to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) WithServer(server *models.Server) *V2ServersJSONByIDPutParams {
	o.SetServer(server)
	return o
}

// SetServer adds the server to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) SetServer(server *models.Server) {
	o.Server = server
}

// WithServerID adds the serverID to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) WithServerID(serverID int64) *V2ServersJSONByIDPutParams {
	o.SetServerID(serverID)
	return o
}

// SetServerID adds the serverId to the v2 servers Json by Id put params
func (o *V2ServersJSONByIDPutParams) SetServerID(serverID int64) {
	o.ServerID = serverID
}

// WriteToRequest writes these params to a swagger request
func (o *V2ServersJSONByIDPutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Server != nil {
		if err := r.SetBodyParam(o.Server); err != nil {
			return err
		}
	}

	// path param server_id
	if err := r.SetPathParam("server_id", swag.FormatInt64(o.ServerID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
