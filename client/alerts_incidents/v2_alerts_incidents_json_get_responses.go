// Code generated by go-swagger; DO NOT EDIT.

package alerts_incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsIncidentsJSONGetReader is a Reader for the V2AlertsIncidentsJSONGet structure.
type V2AlertsIncidentsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsIncidentsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsIncidentsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsIncidentsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsIncidentsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsIncidentsJSONGetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsIncidentsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsIncidentsJSONGetOK creates a V2AlertsIncidentsJSONGetOK with default headers values
func NewV2AlertsIncidentsJSONGetOK() *V2AlertsIncidentsJSONGetOK {
	return &V2AlertsIncidentsJSONGetOK{}
}

/*V2AlertsIncidentsJSONGetOK handles this case with default header values.

OK
*/
type V2AlertsIncidentsJSONGetOK struct {
	Payload *models.IncidentResponse
}

func (o *V2AlertsIncidentsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_incidents.json][%d] v2AlertsIncidentsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2AlertsIncidentsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IncidentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsIncidentsJSONGetUnauthorized creates a V2AlertsIncidentsJSONGetUnauthorized with default headers values
func NewV2AlertsIncidentsJSONGetUnauthorized() *V2AlertsIncidentsJSONGetUnauthorized {
	return &V2AlertsIncidentsJSONGetUnauthorized{}
}

/*V2AlertsIncidentsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsIncidentsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsIncidentsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_incidents.json][%d] v2AlertsIncidentsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsIncidentsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsIncidentsJSONGetForbidden creates a V2AlertsIncidentsJSONGetForbidden with default headers values
func NewV2AlertsIncidentsJSONGetForbidden() *V2AlertsIncidentsJSONGetForbidden {
	return &V2AlertsIncidentsJSONGetForbidden{}
}

/*V2AlertsIncidentsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsIncidentsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2AlertsIncidentsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_incidents.json][%d] v2AlertsIncidentsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsIncidentsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsIncidentsJSONGetUnprocessableEntity creates a V2AlertsIncidentsJSONGetUnprocessableEntity with default headers values
func NewV2AlertsIncidentsJSONGetUnprocessableEntity() *V2AlertsIncidentsJSONGetUnprocessableEntity {
	return &V2AlertsIncidentsJSONGetUnprocessableEntity{}
}

/*V2AlertsIncidentsJSONGetUnprocessableEntity handles this case with default header values.

Validation exception occured
*/
type V2AlertsIncidentsJSONGetUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsIncidentsJSONGetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_incidents.json][%d] v2AlertsIncidentsJsonGetUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsIncidentsJSONGetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsIncidentsJSONGetDefault creates a V2AlertsIncidentsJSONGetDefault with default headers values
func NewV2AlertsIncidentsJSONGetDefault(code int) *V2AlertsIncidentsJSONGetDefault {
	return &V2AlertsIncidentsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2AlertsIncidentsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsIncidentsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts incidents Json get default response
func (o *V2AlertsIncidentsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsIncidentsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_incidents.json][%d] V2AlertsIncidentsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsIncidentsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
