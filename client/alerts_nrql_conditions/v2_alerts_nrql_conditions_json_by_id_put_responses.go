// Code generated by go-swagger; DO NOT EDIT.

package alerts_nrql_conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsNrqlConditionsJSONByIDPutReader is a Reader for the V2AlertsNrqlConditionsJSONByIDPut structure.
type V2AlertsNrqlConditionsJSONByIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsNrqlConditionsJSONByIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsNrqlConditionsJSONByIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsNrqlConditionsJSONByIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsNrqlConditionsJSONByIDPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsNrqlConditionsJSONByIDPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsNrqlConditionsJSONByIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsNrqlConditionsJSONByIDPutOK creates a V2AlertsNrqlConditionsJSONByIDPutOK with default headers values
func NewV2AlertsNrqlConditionsJSONByIDPutOK() *V2AlertsNrqlConditionsJSONByIDPutOK {
	return &V2AlertsNrqlConditionsJSONByIDPutOK{}
}

/*V2AlertsNrqlConditionsJSONByIDPutOK handles this case with default header values.

OK
*/
type V2AlertsNrqlConditionsJSONByIDPutOK struct {
	Payload *models.NrqlConditionResponse
}

func (o *V2AlertsNrqlConditionsJSONByIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_nrql_conditions/{condition_id}.json][%d] v2AlertsNrqlConditionsJsonByIdPutOK  %+v", 200, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONByIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NrqlConditionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONByIDPutUnauthorized creates a V2AlertsNrqlConditionsJSONByIDPutUnauthorized with default headers values
func NewV2AlertsNrqlConditionsJSONByIDPutUnauthorized() *V2AlertsNrqlConditionsJSONByIDPutUnauthorized {
	return &V2AlertsNrqlConditionsJSONByIDPutUnauthorized{}
}

/*V2AlertsNrqlConditionsJSONByIDPutUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsNrqlConditionsJSONByIDPutUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsJSONByIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_nrql_conditions/{condition_id}.json][%d] v2AlertsNrqlConditionsJsonByIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONByIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONByIDPutForbidden creates a V2AlertsNrqlConditionsJSONByIDPutForbidden with default headers values
func NewV2AlertsNrqlConditionsJSONByIDPutForbidden() *V2AlertsNrqlConditionsJSONByIDPutForbidden {
	return &V2AlertsNrqlConditionsJSONByIDPutForbidden{}
}

/*V2AlertsNrqlConditionsJSONByIDPutForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsNrqlConditionsJSONByIDPutForbidden struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsJSONByIDPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_nrql_conditions/{condition_id}.json][%d] v2AlertsNrqlConditionsJsonByIdPutForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONByIDPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONByIDPutNotFound creates a V2AlertsNrqlConditionsJSONByIDPutNotFound with default headers values
func NewV2AlertsNrqlConditionsJSONByIDPutNotFound() *V2AlertsNrqlConditionsJSONByIDPutNotFound {
	return &V2AlertsNrqlConditionsJSONByIDPutNotFound{}
}

/*V2AlertsNrqlConditionsJSONByIDPutNotFound handles this case with default header values.

No Alerts condition was found with the given ID
*/
type V2AlertsNrqlConditionsJSONByIDPutNotFound struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsJSONByIDPutNotFound) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_nrql_conditions/{condition_id}.json][%d] v2AlertsNrqlConditionsJsonByIdPutNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONByIDPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity creates a V2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity with default headers values
func NewV2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity() *V2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity {
	return &V2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity{}
}

/*V2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity handles this case with default header values.

Validation error occurred while trying to update the Alerts condition
*/
type V2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_nrql_conditions/{condition_id}.json][%d] v2AlertsNrqlConditionsJsonByIdPutUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONByIDPutUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONByIDPutDefault creates a V2AlertsNrqlConditionsJSONByIDPutDefault with default headers values
func NewV2AlertsNrqlConditionsJSONByIDPutDefault(code int) *V2AlertsNrqlConditionsJSONByIDPutDefault {
	return &V2AlertsNrqlConditionsJSONByIDPutDefault{
		_statusCode: code,
	}
}

/*V2AlertsNrqlConditionsJSONByIDPutDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsNrqlConditionsJSONByIDPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts nrql conditions Json by Id put default response
func (o *V2AlertsNrqlConditionsJSONByIDPutDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsNrqlConditionsJSONByIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /v2/alerts_nrql_conditions/{condition_id}.json][%d] V2AlertsNrqlConditionsJsonByIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONByIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
