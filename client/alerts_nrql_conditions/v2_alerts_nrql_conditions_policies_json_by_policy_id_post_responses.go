// Code generated by go-swagger; DO NOT EDIT.

package alerts_nrql_conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostReader is a Reader for the V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPost structure.
type V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK creates a V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK with default headers values
func NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK() *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK {
	return &V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK{}
}

/*V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK handles this case with default header values.

OK
*/
type V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK struct {
	Payload *models.NrqlConditionResponse
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_nrql_conditions/policies/{policy_id}.json][%d] v2AlertsNrqlConditionsPoliciesJsonByPolicyIdPostOK  %+v", 200, o.Payload)
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NrqlConditionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized creates a V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized with default headers values
func NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized() *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized {
	return &V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized{}
}

/*V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_nrql_conditions/policies/{policy_id}.json][%d] v2AlertsNrqlConditionsPoliciesJsonByPolicyIdPostUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden creates a V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden with default headers values
func NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden() *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden {
	return &V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden{}
}

/*V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_nrql_conditions/policies/{policy_id}.json][%d] v2AlertsNrqlConditionsPoliciesJsonByPolicyIdPostForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound creates a V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound with default headers values
func NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound() *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound {
	return &V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound{}
}

/*V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound handles this case with default header values.

No Alerts policy was found with the given ID
*/
type V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_nrql_conditions/policies/{policy_id}.json][%d] v2AlertsNrqlConditionsPoliciesJsonByPolicyIdPostNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity creates a V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity with default headers values
func NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity() *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity {
	return &V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity{}
}

/*V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity handles this case with default header values.

Validation error occurred while trying to create the Alerts condition
*/
type V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_nrql_conditions/policies/{policy_id}.json][%d] v2AlertsNrqlConditionsPoliciesJsonByPolicyIdPostUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault creates a V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault with default headers values
func NewV2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault(code int) *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault {
	return &V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault{
		_statusCode: code,
	}
}

/*V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts nrql conditions policies Json by policy Id post default response
func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_nrql_conditions/policies/{policy_id}.json][%d] V2AlertsNrqlConditionsPoliciesJsonByPolicyIdPost default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsNrqlConditionsPoliciesJSONByPolicyIDPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
