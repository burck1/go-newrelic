// Code generated by go-swagger; DO NOT EDIT.

package alerts_nrql_conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsNrqlConditionsJSONGetReader is a Reader for the V2AlertsNrqlConditionsJSONGet structure.
type V2AlertsNrqlConditionsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsNrqlConditionsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsNrqlConditionsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsNrqlConditionsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsNrqlConditionsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsNrqlConditionsJSONGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsNrqlConditionsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsNrqlConditionsJSONGetOK creates a V2AlertsNrqlConditionsJSONGetOK with default headers values
func NewV2AlertsNrqlConditionsJSONGetOK() *V2AlertsNrqlConditionsJSONGetOK {
	return &V2AlertsNrqlConditionsJSONGetOK{}
}

/*V2AlertsNrqlConditionsJSONGetOK handles this case with default header values.

OK
*/
type V2AlertsNrqlConditionsJSONGetOK struct {
	Payload *models.NrqlConditionResponse
}

func (o *V2AlertsNrqlConditionsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_nrql_conditions.json][%d] v2AlertsNrqlConditionsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NrqlConditionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONGetUnauthorized creates a V2AlertsNrqlConditionsJSONGetUnauthorized with default headers values
func NewV2AlertsNrqlConditionsJSONGetUnauthorized() *V2AlertsNrqlConditionsJSONGetUnauthorized {
	return &V2AlertsNrqlConditionsJSONGetUnauthorized{}
}

/*V2AlertsNrqlConditionsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsNrqlConditionsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_nrql_conditions.json][%d] v2AlertsNrqlConditionsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONGetForbidden creates a V2AlertsNrqlConditionsJSONGetForbidden with default headers values
func NewV2AlertsNrqlConditionsJSONGetForbidden() *V2AlertsNrqlConditionsJSONGetForbidden {
	return &V2AlertsNrqlConditionsJSONGetForbidden{}
}

/*V2AlertsNrqlConditionsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsNrqlConditionsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_nrql_conditions.json][%d] v2AlertsNrqlConditionsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONGetNotFound creates a V2AlertsNrqlConditionsJSONGetNotFound with default headers values
func NewV2AlertsNrqlConditionsJSONGetNotFound() *V2AlertsNrqlConditionsJSONGetNotFound {
	return &V2AlertsNrqlConditionsJSONGetNotFound{}
}

/*V2AlertsNrqlConditionsJSONGetNotFound handles this case with default header values.

No Alerts policy was found for the given ID
*/
type V2AlertsNrqlConditionsJSONGetNotFound struct {
	Payload interface{}
}

func (o *V2AlertsNrqlConditionsJSONGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_nrql_conditions.json][%d] v2AlertsNrqlConditionsJsonGetNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsNrqlConditionsJSONGetDefault creates a V2AlertsNrqlConditionsJSONGetDefault with default headers values
func NewV2AlertsNrqlConditionsJSONGetDefault(code int) *V2AlertsNrqlConditionsJSONGetDefault {
	return &V2AlertsNrqlConditionsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2AlertsNrqlConditionsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsNrqlConditionsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts nrql conditions Json get default response
func (o *V2AlertsNrqlConditionsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsNrqlConditionsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_nrql_conditions.json][%d] V2AlertsNrqlConditionsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsNrqlConditionsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
