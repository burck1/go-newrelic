// Code generated by go-swagger; DO NOT EDIT.

package labels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2LabelsJSONGetReader is a Reader for the V2LabelsJSONGet structure.
type V2LabelsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2LabelsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2LabelsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2LabelsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2LabelsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2LabelsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2LabelsJSONGetOK creates a V2LabelsJSONGetOK with default headers values
func NewV2LabelsJSONGetOK() *V2LabelsJSONGetOK {
	return &V2LabelsJSONGetOK{}
}

/*V2LabelsJSONGetOK handles this case with default header values.

OK
*/
type V2LabelsJSONGetOK struct {
	Payload *models.LabelResponse
}

func (o *V2LabelsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/labels.json][%d] v2LabelsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2LabelsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LabelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2LabelsJSONGetUnauthorized creates a V2LabelsJSONGetUnauthorized with default headers values
func NewV2LabelsJSONGetUnauthorized() *V2LabelsJSONGetUnauthorized {
	return &V2LabelsJSONGetUnauthorized{}
}

/*V2LabelsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2LabelsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2LabelsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/labels.json][%d] v2LabelsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2LabelsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2LabelsJSONGetForbidden creates a V2LabelsJSONGetForbidden with default headers values
func NewV2LabelsJSONGetForbidden() *V2LabelsJSONGetForbidden {
	return &V2LabelsJSONGetForbidden{}
}

/*V2LabelsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2LabelsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2LabelsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/labels.json][%d] v2LabelsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2LabelsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2LabelsJSONGetDefault creates a V2LabelsJSONGetDefault with default headers values
func NewV2LabelsJSONGetDefault(code int) *V2LabelsJSONGetDefault {
	return &V2LabelsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2LabelsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2LabelsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 labels Json get default response
func (o *V2LabelsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2LabelsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/labels.json][%d] V2LabelsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2LabelsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
