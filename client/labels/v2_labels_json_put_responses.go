// Code generated by go-swagger; DO NOT EDIT.

package labels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2LabelsJSONPutReader is a Reader for the V2LabelsJSONPut structure.
type V2LabelsJSONPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2LabelsJSONPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2LabelsJSONPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2LabelsJSONPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2LabelsJSONPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2LabelsJSONPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2LabelsJSONPutOK creates a V2LabelsJSONPutOK with default headers values
func NewV2LabelsJSONPutOK() *V2LabelsJSONPutOK {
	return &V2LabelsJSONPutOK{}
}

/*V2LabelsJSONPutOK handles this case with default header values.

OK
*/
type V2LabelsJSONPutOK struct {
	Payload *models.LabelResponse
}

func (o *V2LabelsJSONPutOK) Error() string {
	return fmt.Sprintf("[PUT /v2/labels.json][%d] v2LabelsJsonPutOK  %+v", 200, o.Payload)
}

func (o *V2LabelsJSONPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LabelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2LabelsJSONPutUnauthorized creates a V2LabelsJSONPutUnauthorized with default headers values
func NewV2LabelsJSONPutUnauthorized() *V2LabelsJSONPutUnauthorized {
	return &V2LabelsJSONPutUnauthorized{}
}

/*V2LabelsJSONPutUnauthorized handles this case with default header values.

Invalid API key
*/
type V2LabelsJSONPutUnauthorized struct {
	Payload interface{}
}

func (o *V2LabelsJSONPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v2/labels.json][%d] v2LabelsJsonPutUnauthorized  %+v", 401, o.Payload)
}

func (o *V2LabelsJSONPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2LabelsJSONPutForbidden creates a V2LabelsJSONPutForbidden with default headers values
func NewV2LabelsJSONPutForbidden() *V2LabelsJSONPutForbidden {
	return &V2LabelsJSONPutForbidden{}
}

/*V2LabelsJSONPutForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2LabelsJSONPutForbidden struct {
	Payload interface{}
}

func (o *V2LabelsJSONPutForbidden) Error() string {
	return fmt.Sprintf("[PUT /v2/labels.json][%d] v2LabelsJsonPutForbidden  %+v", 403, o.Payload)
}

func (o *V2LabelsJSONPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2LabelsJSONPutDefault creates a V2LabelsJSONPutDefault with default headers values
func NewV2LabelsJSONPutDefault(code int) *V2LabelsJSONPutDefault {
	return &V2LabelsJSONPutDefault{
		_statusCode: code,
	}
}

/*V2LabelsJSONPutDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2LabelsJSONPutDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 labels Json put default response
func (o *V2LabelsJSONPutDefault) Code() int {
	return o._statusCode
}

func (o *V2LabelsJSONPutDefault) Error() string {
	return fmt.Sprintf("[PUT /v2/labels.json][%d] V2LabelsJsonPut default  %+v", o._statusCode, o.Payload)
}

func (o *V2LabelsJSONPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
