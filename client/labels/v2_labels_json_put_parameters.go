// Code generated by go-swagger; DO NOT EDIT.

package labels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// NewV2LabelsJSONPutParams creates a new V2LabelsJSONPutParams object
// with the default values initialized.
func NewV2LabelsJSONPutParams() *V2LabelsJSONPutParams {
	var ()
	return &V2LabelsJSONPutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2LabelsJSONPutParamsWithTimeout creates a new V2LabelsJSONPutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2LabelsJSONPutParamsWithTimeout(timeout time.Duration) *V2LabelsJSONPutParams {
	var ()
	return &V2LabelsJSONPutParams{

		timeout: timeout,
	}
}

// NewV2LabelsJSONPutParamsWithContext creates a new V2LabelsJSONPutParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2LabelsJSONPutParamsWithContext(ctx context.Context) *V2LabelsJSONPutParams {
	var ()
	return &V2LabelsJSONPutParams{

		Context: ctx,
	}
}

// NewV2LabelsJSONPutParamsWithHTTPClient creates a new V2LabelsJSONPutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2LabelsJSONPutParamsWithHTTPClient(client *http.Client) *V2LabelsJSONPutParams {
	var ()
	return &V2LabelsJSONPutParams{
		HTTPClient: client,
	}
}

/*V2LabelsJSONPutParams contains all the parameters to send to the API endpoint
for the v2 labels Json put operation typically these are written to a http.Request
*/
type V2LabelsJSONPutParams struct {

	/*Label
	  Label schema

	*/
	Label *models.Label

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) WithTimeout(timeout time.Duration) *V2LabelsJSONPutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) WithContext(ctx context.Context) *V2LabelsJSONPutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) WithHTTPClient(client *http.Client) *V2LabelsJSONPutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLabel adds the label to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) WithLabel(label *models.Label) *V2LabelsJSONPutParams {
	o.SetLabel(label)
	return o
}

// SetLabel adds the label to the v2 labels Json put params
func (o *V2LabelsJSONPutParams) SetLabel(label *models.Label) {
	o.Label = label
}

// WriteToRequest writes these params to a swagger request
func (o *V2LabelsJSONPutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Label != nil {
		if err := r.SetBodyParam(o.Label); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
