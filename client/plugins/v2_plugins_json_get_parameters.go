// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewV2PluginsJSONGetParams creates a new V2PluginsJSONGetParams object
// with the default values initialized.
func NewV2PluginsJSONGetParams() *V2PluginsJSONGetParams {
	var ()
	return &V2PluginsJSONGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2PluginsJSONGetParamsWithTimeout creates a new V2PluginsJSONGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2PluginsJSONGetParamsWithTimeout(timeout time.Duration) *V2PluginsJSONGetParams {
	var ()
	return &V2PluginsJSONGetParams{

		timeout: timeout,
	}
}

// NewV2PluginsJSONGetParamsWithContext creates a new V2PluginsJSONGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2PluginsJSONGetParamsWithContext(ctx context.Context) *V2PluginsJSONGetParams {
	var ()
	return &V2PluginsJSONGetParams{

		Context: ctx,
	}
}

// NewV2PluginsJSONGetParamsWithHTTPClient creates a new V2PluginsJSONGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2PluginsJSONGetParamsWithHTTPClient(client *http.Client) *V2PluginsJSONGetParams {
	var ()
	return &V2PluginsJSONGetParams{
		HTTPClient: client,
	}
}

/*V2PluginsJSONGetParams contains all the parameters to send to the API endpoint
for the v2 plugins Json get operation typically these are written to a http.Request
*/
type V2PluginsJSONGetParams struct {

	/*Detailed
	  Include all data about a plugin

	*/
	Detailed *bool
	/*FilterGUID
	  Filter plugin by guid

	*/
	FilterGUID *string
	/*FilterIds
	  Filter plugin by ids

	*/
	FilterIds []int64
	/*Page
	  Pagination index

	*/
	Page *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) WithTimeout(timeout time.Duration) *V2PluginsJSONGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) WithContext(ctx context.Context) *V2PluginsJSONGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) WithHTTPClient(client *http.Client) *V2PluginsJSONGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDetailed adds the detailed to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) WithDetailed(detailed *bool) *V2PluginsJSONGetParams {
	o.SetDetailed(detailed)
	return o
}

// SetDetailed adds the detailed to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) SetDetailed(detailed *bool) {
	o.Detailed = detailed
}

// WithFilterGUID adds the filterGUID to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) WithFilterGUID(filterGUID *string) *V2PluginsJSONGetParams {
	o.SetFilterGUID(filterGUID)
	return o
}

// SetFilterGUID adds the filterGuid to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) SetFilterGUID(filterGUID *string) {
	o.FilterGUID = filterGUID
}

// WithFilterIds adds the filterIds to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) WithFilterIds(filterIds []int64) *V2PluginsJSONGetParams {
	o.SetFilterIds(filterIds)
	return o
}

// SetFilterIds adds the filterIds to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) SetFilterIds(filterIds []int64) {
	o.FilterIds = filterIds
}

// WithPage adds the page to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) WithPage(page *int64) *V2PluginsJSONGetParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the v2 plugins Json get params
func (o *V2PluginsJSONGetParams) SetPage(page *int64) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *V2PluginsJSONGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Detailed != nil {

		// query param detailed
		var qrDetailed bool
		if o.Detailed != nil {
			qrDetailed = *o.Detailed
		}
		qDetailed := swag.FormatBool(qrDetailed)
		if qDetailed != "" {
			if err := r.SetQueryParam("detailed", qDetailed); err != nil {
				return err
			}
		}

	}

	if o.FilterGUID != nil {

		// query param filter[guid]
		var qrFilterGUID string
		if o.FilterGUID != nil {
			qrFilterGUID = *o.FilterGUID
		}
		qFilterGUID := qrFilterGUID
		if qFilterGUID != "" {
			if err := r.SetQueryParam("filter[guid]", qFilterGUID); err != nil {
				return err
			}
		}

	}

	var valuesFilterIds []string
	for _, v := range o.FilterIds {
		valuesFilterIds = append(valuesFilterIds, swag.FormatInt64(v))
	}

	joinedFilterIds := swag.JoinByFormat(valuesFilterIds, "csv")
	// query array param filter[ids]
	if err := r.SetQueryParam("filter[ids]", joinedFilterIds...); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
