// Code generated by go-swagger; DO NOT EDIT.

package key_transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2KeyTransactionsJSONByIDGetReader is a Reader for the V2KeyTransactionsJSONByIDGet structure.
type V2KeyTransactionsJSONByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2KeyTransactionsJSONByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2KeyTransactionsJSONByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2KeyTransactionsJSONByIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2KeyTransactionsJSONByIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2KeyTransactionsJSONByIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2KeyTransactionsJSONByIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2KeyTransactionsJSONByIDGetOK creates a V2KeyTransactionsJSONByIDGetOK with default headers values
func NewV2KeyTransactionsJSONByIDGetOK() *V2KeyTransactionsJSONByIDGetOK {
	return &V2KeyTransactionsJSONByIDGetOK{}
}

/*V2KeyTransactionsJSONByIDGetOK handles this case with default header values.

OK
*/
type V2KeyTransactionsJSONByIDGetOK struct {
	Payload *models.KeyTransactionResponse
}

func (o *V2KeyTransactionsJSONByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions/{key_transaction_id}.json][%d] v2KeyTransactionsJsonByIdGetOK  %+v", 200, o.Payload)
}

func (o *V2KeyTransactionsJSONByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyTransactionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2KeyTransactionsJSONByIDGetUnauthorized creates a V2KeyTransactionsJSONByIDGetUnauthorized with default headers values
func NewV2KeyTransactionsJSONByIDGetUnauthorized() *V2KeyTransactionsJSONByIDGetUnauthorized {
	return &V2KeyTransactionsJSONByIDGetUnauthorized{}
}

/*V2KeyTransactionsJSONByIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2KeyTransactionsJSONByIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2KeyTransactionsJSONByIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions/{key_transaction_id}.json][%d] v2KeyTransactionsJsonByIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2KeyTransactionsJSONByIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2KeyTransactionsJSONByIDGetForbidden creates a V2KeyTransactionsJSONByIDGetForbidden with default headers values
func NewV2KeyTransactionsJSONByIDGetForbidden() *V2KeyTransactionsJSONByIDGetForbidden {
	return &V2KeyTransactionsJSONByIDGetForbidden{}
}

/*V2KeyTransactionsJSONByIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2KeyTransactionsJSONByIDGetForbidden struct {
	Payload interface{}
}

func (o *V2KeyTransactionsJSONByIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions/{key_transaction_id}.json][%d] v2KeyTransactionsJsonByIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2KeyTransactionsJSONByIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2KeyTransactionsJSONByIDGetNotFound creates a V2KeyTransactionsJSONByIDGetNotFound with default headers values
func NewV2KeyTransactionsJSONByIDGetNotFound() *V2KeyTransactionsJSONByIDGetNotFound {
	return &V2KeyTransactionsJSONByIDGetNotFound{}
}

/*V2KeyTransactionsJSONByIDGetNotFound handles this case with default header values.

No key transaction found with the given ID
*/
type V2KeyTransactionsJSONByIDGetNotFound struct {
	Payload interface{}
}

func (o *V2KeyTransactionsJSONByIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions/{key_transaction_id}.json][%d] v2KeyTransactionsJsonByIdGetNotFound  %+v", 404, o.Payload)
}

func (o *V2KeyTransactionsJSONByIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2KeyTransactionsJSONByIDGetDefault creates a V2KeyTransactionsJSONByIDGetDefault with default headers values
func NewV2KeyTransactionsJSONByIDGetDefault(code int) *V2KeyTransactionsJSONByIDGetDefault {
	return &V2KeyTransactionsJSONByIDGetDefault{
		_statusCode: code,
	}
}

/*V2KeyTransactionsJSONByIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2KeyTransactionsJSONByIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 key transactions Json by Id get default response
func (o *V2KeyTransactionsJSONByIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2KeyTransactionsJSONByIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions/{key_transaction_id}.json][%d] V2KeyTransactionsJsonByIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2KeyTransactionsJSONByIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
