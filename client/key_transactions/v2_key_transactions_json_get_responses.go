// Code generated by go-swagger; DO NOT EDIT.

package key_transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2KeyTransactionsJSONGetReader is a Reader for the V2KeyTransactionsJSONGet structure.
type V2KeyTransactionsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2KeyTransactionsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2KeyTransactionsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2KeyTransactionsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2KeyTransactionsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2KeyTransactionsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2KeyTransactionsJSONGetOK creates a V2KeyTransactionsJSONGetOK with default headers values
func NewV2KeyTransactionsJSONGetOK() *V2KeyTransactionsJSONGetOK {
	return &V2KeyTransactionsJSONGetOK{}
}

/*V2KeyTransactionsJSONGetOK handles this case with default header values.

OK
*/
type V2KeyTransactionsJSONGetOK struct {
	Payload *models.KeyTransactionResponse
}

func (o *V2KeyTransactionsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions.json][%d] v2KeyTransactionsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2KeyTransactionsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeyTransactionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2KeyTransactionsJSONGetUnauthorized creates a V2KeyTransactionsJSONGetUnauthorized with default headers values
func NewV2KeyTransactionsJSONGetUnauthorized() *V2KeyTransactionsJSONGetUnauthorized {
	return &V2KeyTransactionsJSONGetUnauthorized{}
}

/*V2KeyTransactionsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2KeyTransactionsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2KeyTransactionsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions.json][%d] v2KeyTransactionsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2KeyTransactionsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2KeyTransactionsJSONGetForbidden creates a V2KeyTransactionsJSONGetForbidden with default headers values
func NewV2KeyTransactionsJSONGetForbidden() *V2KeyTransactionsJSONGetForbidden {
	return &V2KeyTransactionsJSONGetForbidden{}
}

/*V2KeyTransactionsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2KeyTransactionsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2KeyTransactionsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions.json][%d] v2KeyTransactionsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2KeyTransactionsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2KeyTransactionsJSONGetDefault creates a V2KeyTransactionsJSONGetDefault with default headers values
func NewV2KeyTransactionsJSONGetDefault(code int) *V2KeyTransactionsJSONGetDefault {
	return &V2KeyTransactionsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2KeyTransactionsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2KeyTransactionsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 key transactions Json get default response
func (o *V2KeyTransactionsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2KeyTransactionsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/key_transactions.json][%d] V2KeyTransactionsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2KeyTransactionsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
