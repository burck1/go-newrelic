// Code generated by go-swagger; DO NOT EDIT.

package alerts_violations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsViolationsJSONGetReader is a Reader for the V2AlertsViolationsJSONGet structure.
type V2AlertsViolationsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsViolationsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsViolationsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsViolationsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsViolationsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsViolationsJSONGetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsViolationsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsViolationsJSONGetOK creates a V2AlertsViolationsJSONGetOK with default headers values
func NewV2AlertsViolationsJSONGetOK() *V2AlertsViolationsJSONGetOK {
	return &V2AlertsViolationsJSONGetOK{}
}

/*V2AlertsViolationsJSONGetOK handles this case with default header values.

OK
*/
type V2AlertsViolationsJSONGetOK struct {
	Payload *models.ViolationResponse
}

func (o *V2AlertsViolationsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_violations.json][%d] v2AlertsViolationsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2AlertsViolationsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ViolationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsViolationsJSONGetUnauthorized creates a V2AlertsViolationsJSONGetUnauthorized with default headers values
func NewV2AlertsViolationsJSONGetUnauthorized() *V2AlertsViolationsJSONGetUnauthorized {
	return &V2AlertsViolationsJSONGetUnauthorized{}
}

/*V2AlertsViolationsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsViolationsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsViolationsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_violations.json][%d] v2AlertsViolationsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsViolationsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsViolationsJSONGetForbidden creates a V2AlertsViolationsJSONGetForbidden with default headers values
func NewV2AlertsViolationsJSONGetForbidden() *V2AlertsViolationsJSONGetForbidden {
	return &V2AlertsViolationsJSONGetForbidden{}
}

/*V2AlertsViolationsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsViolationsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2AlertsViolationsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_violations.json][%d] v2AlertsViolationsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsViolationsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsViolationsJSONGetUnprocessableEntity creates a V2AlertsViolationsJSONGetUnprocessableEntity with default headers values
func NewV2AlertsViolationsJSONGetUnprocessableEntity() *V2AlertsViolationsJSONGetUnprocessableEntity {
	return &V2AlertsViolationsJSONGetUnprocessableEntity{}
}

/*V2AlertsViolationsJSONGetUnprocessableEntity handles this case with default header values.

Internal error occurred while trying to list violations
*/
type V2AlertsViolationsJSONGetUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsViolationsJSONGetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_violations.json][%d] v2AlertsViolationsJsonGetUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsViolationsJSONGetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsViolationsJSONGetDefault creates a V2AlertsViolationsJSONGetDefault with default headers values
func NewV2AlertsViolationsJSONGetDefault(code int) *V2AlertsViolationsJSONGetDefault {
	return &V2AlertsViolationsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2AlertsViolationsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsViolationsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts violations Json get default response
func (o *V2AlertsViolationsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsViolationsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_violations.json][%d] V2AlertsViolationsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsViolationsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
