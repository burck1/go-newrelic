// Code generated by go-swagger; DO NOT EDIT.

package components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ComponentsMetricsDataJSONByComponentIDGetReader is a Reader for the V2ComponentsMetricsDataJSONByComponentIDGet structure.
type V2ComponentsMetricsDataJSONByComponentIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ComponentsMetricsDataJSONByComponentIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ComponentsMetricsDataJSONByComponentIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ComponentsMetricsDataJSONByComponentIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ComponentsMetricsDataJSONByComponentIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ComponentsMetricsDataJSONByComponentIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ComponentsMetricsDataJSONByComponentIDGetOK creates a V2ComponentsMetricsDataJSONByComponentIDGetOK with default headers values
func NewV2ComponentsMetricsDataJSONByComponentIDGetOK() *V2ComponentsMetricsDataJSONByComponentIDGetOK {
	return &V2ComponentsMetricsDataJSONByComponentIDGetOK{}
}

/*V2ComponentsMetricsDataJSONByComponentIDGetOK handles this case with default header values.

OK
*/
type V2ComponentsMetricsDataJSONByComponentIDGetOK struct {
	Payload *models.MetricDataResponse
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/components/{component_id}/metrics/data.json][%d] v2ComponentsMetricsDataJsonByComponentIdGetOK  %+v", 200, o.Payload)
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetricDataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ComponentsMetricsDataJSONByComponentIDGetUnauthorized creates a V2ComponentsMetricsDataJSONByComponentIDGetUnauthorized with default headers values
func NewV2ComponentsMetricsDataJSONByComponentIDGetUnauthorized() *V2ComponentsMetricsDataJSONByComponentIDGetUnauthorized {
	return &V2ComponentsMetricsDataJSONByComponentIDGetUnauthorized{}
}

/*V2ComponentsMetricsDataJSONByComponentIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ComponentsMetricsDataJSONByComponentIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/components/{component_id}/metrics/data.json][%d] v2ComponentsMetricsDataJsonByComponentIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ComponentsMetricsDataJSONByComponentIDGetForbidden creates a V2ComponentsMetricsDataJSONByComponentIDGetForbidden with default headers values
func NewV2ComponentsMetricsDataJSONByComponentIDGetForbidden() *V2ComponentsMetricsDataJSONByComponentIDGetForbidden {
	return &V2ComponentsMetricsDataJSONByComponentIDGetForbidden{}
}

/*V2ComponentsMetricsDataJSONByComponentIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ComponentsMetricsDataJSONByComponentIDGetForbidden struct {
	Payload interface{}
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/components/{component_id}/metrics/data.json][%d] v2ComponentsMetricsDataJsonByComponentIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ComponentsMetricsDataJSONByComponentIDGetDefault creates a V2ComponentsMetricsDataJSONByComponentIDGetDefault with default headers values
func NewV2ComponentsMetricsDataJSONByComponentIDGetDefault(code int) *V2ComponentsMetricsDataJSONByComponentIDGetDefault {
	return &V2ComponentsMetricsDataJSONByComponentIDGetDefault{
		_statusCode: code,
	}
}

/*V2ComponentsMetricsDataJSONByComponentIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ComponentsMetricsDataJSONByComponentIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 components metrics data Json by component Id get default response
func (o *V2ComponentsMetricsDataJSONByComponentIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/components/{component_id}/metrics/data.json][%d] V2ComponentsMetricsDataJsonByComponentIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2ComponentsMetricsDataJSONByComponentIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
