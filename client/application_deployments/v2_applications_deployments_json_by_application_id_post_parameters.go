// Code generated by go-swagger; DO NOT EDIT.

package application_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// NewV2ApplicationsDeploymentsJSONByApplicationIDPostParams creates a new V2ApplicationsDeploymentsJSONByApplicationIDPostParams object
// with the default values initialized.
func NewV2ApplicationsDeploymentsJSONByApplicationIDPostParams() *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	var ()
	return &V2ApplicationsDeploymentsJSONByApplicationIDPostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDPostParamsWithTimeout creates a new V2ApplicationsDeploymentsJSONByApplicationIDPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2ApplicationsDeploymentsJSONByApplicationIDPostParamsWithTimeout(timeout time.Duration) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	var ()
	return &V2ApplicationsDeploymentsJSONByApplicationIDPostParams{

		timeout: timeout,
	}
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDPostParamsWithContext creates a new V2ApplicationsDeploymentsJSONByApplicationIDPostParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2ApplicationsDeploymentsJSONByApplicationIDPostParamsWithContext(ctx context.Context) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	var ()
	return &V2ApplicationsDeploymentsJSONByApplicationIDPostParams{

		Context: ctx,
	}
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDPostParamsWithHTTPClient creates a new V2ApplicationsDeploymentsJSONByApplicationIDPostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2ApplicationsDeploymentsJSONByApplicationIDPostParamsWithHTTPClient(client *http.Client) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	var ()
	return &V2ApplicationsDeploymentsJSONByApplicationIDPostParams{
		HTTPClient: client,
	}
}

/*V2ApplicationsDeploymentsJSONByApplicationIDPostParams contains all the parameters to send to the API endpoint
for the v2 applications deployments Json by application Id post operation typically these are written to a http.Request
*/
type V2ApplicationsDeploymentsJSONByApplicationIDPostParams struct {

	/*ApplicationID
	  Application ID

	*/
	ApplicationID int64
	/*Deployment
	  Deployment schema

	*/
	Deployment *models.Deployment

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) WithTimeout(timeout time.Duration) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) WithContext(ctx context.Context) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) WithHTTPClient(client *http.Client) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationID adds the applicationID to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) WithApplicationID(applicationID int64) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	o.SetApplicationID(applicationID)
	return o
}

// SetApplicationID adds the applicationId to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) SetApplicationID(applicationID int64) {
	o.ApplicationID = applicationID
}

// WithDeployment adds the deployment to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) WithDeployment(deployment *models.Deployment) *V2ApplicationsDeploymentsJSONByApplicationIDPostParams {
	o.SetDeployment(deployment)
	return o
}

// SetDeployment adds the deployment to the v2 applications deployments Json by application Id post params
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) SetDeployment(deployment *models.Deployment) {
	o.Deployment = deployment
}

// WriteToRequest writes these params to a swagger request
func (o *V2ApplicationsDeploymentsJSONByApplicationIDPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param application_id
	if err := r.SetPathParam("application_id", swag.FormatInt64(o.ApplicationID)); err != nil {
		return err
	}

	if o.Deployment != nil {
		if err := r.SetBodyParam(o.Deployment); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
