// Code generated by go-swagger; DO NOT EDIT.

package application_deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteReader is a Reader for the V2ApplicationsDeploymentsJSONByApplicationIDAndIDDelete structure.
type V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK creates a V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK with default headers values
func NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK() *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK {
	return &V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK{}
}

/*V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK handles this case with default header values.

OK
*/
type V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK struct {
	Payload *models.DeploymentResponse
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /v2/applications/{application_id}/deployments/{deployment_id}.json][%d] v2ApplicationsDeploymentsJsonByApplicationIdAndIdDeleteOK  %+v", 200, o.Payload)
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized creates a V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized with default headers values
func NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized() *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized {
	return &V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized{}
}

/*V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized struct {
	Payload interface{}
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v2/applications/{application_id}/deployments/{deployment_id}.json][%d] v2ApplicationsDeploymentsJsonByApplicationIdAndIdDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden creates a V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden with default headers values
func NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden() *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden {
	return &V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden{}
}

/*V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden struct {
	Payload interface{}
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v2/applications/{application_id}/deployments/{deployment_id}.json][%d] v2ApplicationsDeploymentsJsonByApplicationIdAndIdDeleteForbidden  %+v", 403, o.Payload)
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound creates a V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound with default headers values
func NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound() *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound {
	return &V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound{}
}

/*V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound handles this case with default header values.

No Deployment found with the given ID
*/
type V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound struct {
	Payload interface{}
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v2/applications/{application_id}/deployments/{deployment_id}.json][%d] v2ApplicationsDeploymentsJsonByApplicationIdAndIdDeleteNotFound  %+v", 404, o.Payload)
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault creates a V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault with default headers values
func NewV2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault(code int) *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault {
	return &V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault{
		_statusCode: code,
	}
}

/*V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 applications deployments Json by application Id and Id delete default response
func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault) Code() int {
	return o._statusCode
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /v2/applications/{application_id}/deployments/{deployment_id}.json][%d] V2ApplicationsDeploymentsJsonByApplicationIdAndIdDelete default  %+v", o._statusCode, o.Payload)
}

func (o *V2ApplicationsDeploymentsJSONByApplicationIDAndIDDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
