// Code generated by go-swagger; DO NOT EDIT.

package application_hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ApplicationsHostsJSONByApplicationIDAndIDGetReader is a Reader for the V2ApplicationsHostsJSONByApplicationIDAndIDGet structure.
type V2ApplicationsHostsJSONByApplicationIDAndIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ApplicationsHostsJSONByApplicationIDAndIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ApplicationsHostsJSONByApplicationIDAndIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ApplicationsHostsJSONByApplicationIDAndIDGetOK creates a V2ApplicationsHostsJSONByApplicationIDAndIDGetOK with default headers values
func NewV2ApplicationsHostsJSONByApplicationIDAndIDGetOK() *V2ApplicationsHostsJSONByApplicationIDAndIDGetOK {
	return &V2ApplicationsHostsJSONByApplicationIDAndIDGetOK{}
}

/*V2ApplicationsHostsJSONByApplicationIDAndIDGetOK handles this case with default header values.

OK
*/
type V2ApplicationsHostsJSONByApplicationIDAndIDGetOK struct {
	Payload *models.ApplicationHostResponse
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}.json][%d] v2ApplicationsHostsJsonByApplicationIdAndIdGetOK  %+v", 200, o.Payload)
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationHostResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized creates a V2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized with default headers values
func NewV2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized() *V2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized {
	return &V2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized{}
}

/*V2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}.json][%d] v2ApplicationsHostsJsonByApplicationIdAndIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden creates a V2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden with default headers values
func NewV2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden() *V2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden {
	return &V2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden{}
}

/*V2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden struct {
	Payload interface{}
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}.json][%d] v2ApplicationsHostsJsonByApplicationIdAndIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound creates a V2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound with default headers values
func NewV2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound() *V2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound {
	return &V2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound{}
}

/*V2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound handles this case with default header values.

No application host found with the given ID
*/
type V2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound struct {
	Payload interface{}
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}.json][%d] v2ApplicationsHostsJsonByApplicationIdAndIdGetNotFound  %+v", 404, o.Payload)
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsHostsJSONByApplicationIDAndIDGetDefault creates a V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault with default headers values
func NewV2ApplicationsHostsJSONByApplicationIDAndIDGetDefault(code int) *V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault {
	return &V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault{
		_statusCode: code,
	}
}

/*V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 applications hosts Json by application Id and Id get default response
func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}.json][%d] V2ApplicationsHostsJsonByApplicationIdAndIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2ApplicationsHostsJSONByApplicationIDAndIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
