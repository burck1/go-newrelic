// Code generated by go-swagger; DO NOT EDIT.

package application_hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetReader is a Reader for the V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGet structure.
type V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK creates a V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK with default headers values
func NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK() *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK {
	return &V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK{}
}

/*V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK handles this case with default header values.

OK
*/
type V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK struct {
	Payload *models.MetricDataResponse
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}/metrics/data.json][%d] v2ApplicationsHostsMetricsDataJsonByApplicationIdAndHostIdGetOK  %+v", 200, o.Payload)
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetricDataResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized creates a V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized with default headers values
func NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized() *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized {
	return &V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized{}
}

/*V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}/metrics/data.json][%d] v2ApplicationsHostsMetricsDataJsonByApplicationIdAndHostIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden creates a V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden with default headers values
func NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden() *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden {
	return &V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden{}
}

/*V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden struct {
	Payload interface{}
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}/metrics/data.json][%d] v2ApplicationsHostsMetricsDataJsonByApplicationIdAndHostIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault creates a V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault with default headers values
func NewV2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault(code int) *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault {
	return &V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault{
		_statusCode: code,
	}
}

/*V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 applications hosts metrics data Json by application Id and host Id get default response
func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/hosts/{host_id}/metrics/data.json][%d] V2ApplicationsHostsMetricsDataJsonByApplicationIdAndHostIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2ApplicationsHostsMetricsDataJSONByApplicationIDAndHostIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
