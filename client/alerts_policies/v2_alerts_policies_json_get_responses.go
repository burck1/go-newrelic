// Code generated by go-swagger; DO NOT EDIT.

package alerts_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsPoliciesJSONGetReader is a Reader for the V2AlertsPoliciesJSONGet structure.
type V2AlertsPoliciesJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsPoliciesJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsPoliciesJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsPoliciesJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsPoliciesJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsPoliciesJSONGetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsPoliciesJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsPoliciesJSONGetOK creates a V2AlertsPoliciesJSONGetOK with default headers values
func NewV2AlertsPoliciesJSONGetOK() *V2AlertsPoliciesJSONGetOK {
	return &V2AlertsPoliciesJSONGetOK{}
}

/*V2AlertsPoliciesJSONGetOK handles this case with default header values.

OK
*/
type V2AlertsPoliciesJSONGetOK struct {
	Payload *models.PolicyResponse
}

func (o *V2AlertsPoliciesJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2AlertsPoliciesJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PolicyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONGetUnauthorized creates a V2AlertsPoliciesJSONGetUnauthorized with default headers values
func NewV2AlertsPoliciesJSONGetUnauthorized() *V2AlertsPoliciesJSONGetUnauthorized {
	return &V2AlertsPoliciesJSONGetUnauthorized{}
}

/*V2AlertsPoliciesJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsPoliciesJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsPoliciesJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsPoliciesJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONGetForbidden creates a V2AlertsPoliciesJSONGetForbidden with default headers values
func NewV2AlertsPoliciesJSONGetForbidden() *V2AlertsPoliciesJSONGetForbidden {
	return &V2AlertsPoliciesJSONGetForbidden{}
}

/*V2AlertsPoliciesJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsPoliciesJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2AlertsPoliciesJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsPoliciesJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONGetUnprocessableEntity creates a V2AlertsPoliciesJSONGetUnprocessableEntity with default headers values
func NewV2AlertsPoliciesJSONGetUnprocessableEntity() *V2AlertsPoliciesJSONGetUnprocessableEntity {
	return &V2AlertsPoliciesJSONGetUnprocessableEntity{}
}

/*V2AlertsPoliciesJSONGetUnprocessableEntity handles this case with default header values.

Validation or internal error occurred
*/
type V2AlertsPoliciesJSONGetUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsPoliciesJSONGetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonGetUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsPoliciesJSONGetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONGetDefault creates a V2AlertsPoliciesJSONGetDefault with default headers values
func NewV2AlertsPoliciesJSONGetDefault(code int) *V2AlertsPoliciesJSONGetDefault {
	return &V2AlertsPoliciesJSONGetDefault{
		_statusCode: code,
	}
}

/*V2AlertsPoliciesJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsPoliciesJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts policies Json get default response
func (o *V2AlertsPoliciesJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsPoliciesJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_policies.json][%d] V2AlertsPoliciesJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsPoliciesJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
