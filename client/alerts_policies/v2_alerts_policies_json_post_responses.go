// Code generated by go-swagger; DO NOT EDIT.

package alerts_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsPoliciesJSONPostReader is a Reader for the V2AlertsPoliciesJSONPost structure.
type V2AlertsPoliciesJSONPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsPoliciesJSONPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsPoliciesJSONPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsPoliciesJSONPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsPoliciesJSONPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsPoliciesJSONPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsPoliciesJSONPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsPoliciesJSONPostOK creates a V2AlertsPoliciesJSONPostOK with default headers values
func NewV2AlertsPoliciesJSONPostOK() *V2AlertsPoliciesJSONPostOK {
	return &V2AlertsPoliciesJSONPostOK{}
}

/*V2AlertsPoliciesJSONPostOK handles this case with default header values.

OK
*/
type V2AlertsPoliciesJSONPostOK struct {
	Payload *models.PolicyResponse
}

func (o *V2AlertsPoliciesJSONPostOK) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonPostOK  %+v", 200, o.Payload)
}

func (o *V2AlertsPoliciesJSONPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PolicyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONPostUnauthorized creates a V2AlertsPoliciesJSONPostUnauthorized with default headers values
func NewV2AlertsPoliciesJSONPostUnauthorized() *V2AlertsPoliciesJSONPostUnauthorized {
	return &V2AlertsPoliciesJSONPostUnauthorized{}
}

/*V2AlertsPoliciesJSONPostUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsPoliciesJSONPostUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsPoliciesJSONPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonPostUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsPoliciesJSONPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONPostForbidden creates a V2AlertsPoliciesJSONPostForbidden with default headers values
func NewV2AlertsPoliciesJSONPostForbidden() *V2AlertsPoliciesJSONPostForbidden {
	return &V2AlertsPoliciesJSONPostForbidden{}
}

/*V2AlertsPoliciesJSONPostForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsPoliciesJSONPostForbidden struct {
	Payload interface{}
}

func (o *V2AlertsPoliciesJSONPostForbidden) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonPostForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsPoliciesJSONPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONPostUnprocessableEntity creates a V2AlertsPoliciesJSONPostUnprocessableEntity with default headers values
func NewV2AlertsPoliciesJSONPostUnprocessableEntity() *V2AlertsPoliciesJSONPostUnprocessableEntity {
	return &V2AlertsPoliciesJSONPostUnprocessableEntity{}
}

/*V2AlertsPoliciesJSONPostUnprocessableEntity handles this case with default header values.

Validation or internal error occurred while trying to create the Alerts policy
*/
type V2AlertsPoliciesJSONPostUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsPoliciesJSONPostUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_policies.json][%d] v2AlertsPoliciesJsonPostUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsPoliciesJSONPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPoliciesJSONPostDefault creates a V2AlertsPoliciesJSONPostDefault with default headers values
func NewV2AlertsPoliciesJSONPostDefault(code int) *V2AlertsPoliciesJSONPostDefault {
	return &V2AlertsPoliciesJSONPostDefault{
		_statusCode: code,
	}
}

/*V2AlertsPoliciesJSONPostDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsPoliciesJSONPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts policies Json post default response
func (o *V2AlertsPoliciesJSONPostDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsPoliciesJSONPostDefault) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_policies.json][%d] V2AlertsPoliciesJsonPost default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsPoliciesJSONPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
