// Code generated by go-swagger; DO NOT EDIT.

package alerts_external_service_conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostReader is a Reader for the V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPost structure.
type V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK creates a V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK with default headers values
func NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK() *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK {
	return &V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK{}
}

/*V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK handles this case with default header values.

OK
*/
type V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK struct {
	Payload *models.ExternalServiceConditionResponse
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_external_service_conditions/policies/{policy_id}.json][%d] v2AlertsExternalServiceConditionsPoliciesJsonByPolicyIdPostOK  %+v", 200, o.Payload)
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalServiceConditionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized creates a V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized with default headers values
func NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized() *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized {
	return &V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized{}
}

/*V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_external_service_conditions/policies/{policy_id}.json][%d] v2AlertsExternalServiceConditionsPoliciesJsonByPolicyIdPostUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden creates a V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden with default headers values
func NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden() *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden {
	return &V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden{}
}

/*V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden struct {
	Payload interface{}
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_external_service_conditions/policies/{policy_id}.json][%d] v2AlertsExternalServiceConditionsPoliciesJsonByPolicyIdPostForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound creates a V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound with default headers values
func NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound() *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound {
	return &V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound{}
}

/*V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound handles this case with default header values.

No alert policy was found with the given ID
*/
type V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound struct {
	Payload interface{}
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_external_service_conditions/policies/{policy_id}.json][%d] v2AlertsExternalServiceConditionsPoliciesJsonByPolicyIdPostNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity creates a V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity with default headers values
func NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity() *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity {
	return &V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity{}
}

/*V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity handles this case with default header values.

Validation error occurred while trying to create the alert condition
*/
type V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_external_service_conditions/policies/{policy_id}.json][%d] v2AlertsExternalServiceConditionsPoliciesJsonByPolicyIdPostUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault creates a V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault with default headers values
func NewV2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault(code int) *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault {
	return &V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault{
		_statusCode: code,
	}
}

/*V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts external service conditions policies Json by policy Id post default response
func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_external_service_conditions/policies/{policy_id}.json][%d] V2AlertsExternalServiceConditionsPoliciesJsonByPolicyIdPost default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsExternalServiceConditionsPoliciesJSONByPolicyIDPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
