// Code generated by go-swagger; DO NOT EDIT.

package alerts_events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsEventsJSONGetReader is a Reader for the V2AlertsEventsJSONGet structure.
type V2AlertsEventsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsEventsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsEventsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsEventsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsEventsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsEventsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsEventsJSONGetOK creates a V2AlertsEventsJSONGetOK with default headers values
func NewV2AlertsEventsJSONGetOK() *V2AlertsEventsJSONGetOK {
	return &V2AlertsEventsJSONGetOK{}
}

/*V2AlertsEventsJSONGetOK handles this case with default header values.

OK
*/
type V2AlertsEventsJSONGetOK struct {
	Payload *models.RecentEventResponse
}

func (o *V2AlertsEventsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_events.json][%d] v2AlertsEventsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2AlertsEventsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecentEventResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsEventsJSONGetUnauthorized creates a V2AlertsEventsJSONGetUnauthorized with default headers values
func NewV2AlertsEventsJSONGetUnauthorized() *V2AlertsEventsJSONGetUnauthorized {
	return &V2AlertsEventsJSONGetUnauthorized{}
}

/*V2AlertsEventsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsEventsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsEventsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_events.json][%d] v2AlertsEventsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsEventsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsEventsJSONGetForbidden creates a V2AlertsEventsJSONGetForbidden with default headers values
func NewV2AlertsEventsJSONGetForbidden() *V2AlertsEventsJSONGetForbidden {
	return &V2AlertsEventsJSONGetForbidden{}
}

/*V2AlertsEventsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsEventsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2AlertsEventsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_events.json][%d] v2AlertsEventsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsEventsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsEventsJSONGetDefault creates a V2AlertsEventsJSONGetDefault with default headers values
func NewV2AlertsEventsJSONGetDefault(code int) *V2AlertsEventsJSONGetDefault {
	return &V2AlertsEventsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2AlertsEventsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsEventsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts events Json get default response
func (o *V2AlertsEventsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsEventsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_events.json][%d] V2AlertsEventsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsEventsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
