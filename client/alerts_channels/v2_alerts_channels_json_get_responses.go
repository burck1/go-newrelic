// Code generated by go-swagger; DO NOT EDIT.

package alerts_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsChannelsJSONGetReader is a Reader for the V2AlertsChannelsJSONGet structure.
type V2AlertsChannelsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsChannelsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsChannelsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsChannelsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsChannelsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsChannelsJSONGetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsChannelsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsChannelsJSONGetOK creates a V2AlertsChannelsJSONGetOK with default headers values
func NewV2AlertsChannelsJSONGetOK() *V2AlertsChannelsJSONGetOK {
	return &V2AlertsChannelsJSONGetOK{}
}

/*V2AlertsChannelsJSONGetOK handles this case with default header values.

OK
*/
type V2AlertsChannelsJSONGetOK struct {
	Payload *models.ChannelResponse
}

func (o *V2AlertsChannelsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_channels.json][%d] v2AlertsChannelsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2AlertsChannelsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONGetUnauthorized creates a V2AlertsChannelsJSONGetUnauthorized with default headers values
func NewV2AlertsChannelsJSONGetUnauthorized() *V2AlertsChannelsJSONGetUnauthorized {
	return &V2AlertsChannelsJSONGetUnauthorized{}
}

/*V2AlertsChannelsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsChannelsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsChannelsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_channels.json][%d] v2AlertsChannelsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsChannelsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONGetForbidden creates a V2AlertsChannelsJSONGetForbidden with default headers values
func NewV2AlertsChannelsJSONGetForbidden() *V2AlertsChannelsJSONGetForbidden {
	return &V2AlertsChannelsJSONGetForbidden{}
}

/*V2AlertsChannelsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsChannelsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2AlertsChannelsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_channels.json][%d] v2AlertsChannelsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsChannelsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONGetUnprocessableEntity creates a V2AlertsChannelsJSONGetUnprocessableEntity with default headers values
func NewV2AlertsChannelsJSONGetUnprocessableEntity() *V2AlertsChannelsJSONGetUnprocessableEntity {
	return &V2AlertsChannelsJSONGetUnprocessableEntity{}
}

/*V2AlertsChannelsJSONGetUnprocessableEntity handles this case with default header values.

Validation or internal error occurred
*/
type V2AlertsChannelsJSONGetUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsChannelsJSONGetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_channels.json][%d] v2AlertsChannelsJsonGetUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsChannelsJSONGetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONGetDefault creates a V2AlertsChannelsJSONGetDefault with default headers values
func NewV2AlertsChannelsJSONGetDefault(code int) *V2AlertsChannelsJSONGetDefault {
	return &V2AlertsChannelsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2AlertsChannelsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsChannelsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts channels Json get default response
func (o *V2AlertsChannelsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsChannelsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_channels.json][%d] V2AlertsChannelsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsChannelsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
