// Code generated by go-swagger; DO NOT EDIT.

package alerts_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new alerts channels API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for alerts channels API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
V2AlertsChannelsJSONByChannelIDDelete deletes

Delete
*/
func (a *Client) V2AlertsChannelsJSONByChannelIDDelete(params *V2AlertsChannelsJSONByChannelIDDeleteParams) (*V2AlertsChannelsJSONByChannelIDDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewV2AlertsChannelsJSONByChannelIDDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "V2AlertsChannelsJsonByChannelIdDelete",
		Method:             "DELETE",
		PathPattern:        "/v2/alerts_channels/{channel_id}.json",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &V2AlertsChannelsJSONByChannelIDDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*V2AlertsChannelsJSONByChannelIDDeleteOK), nil

}

/*
V2AlertsChannelsJSONGet lists

List
*/
func (a *Client) V2AlertsChannelsJSONGet(params *V2AlertsChannelsJSONGetParams) (*V2AlertsChannelsJSONGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewV2AlertsChannelsJSONGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "V2AlertsChannelsJsonGet",
		Method:             "GET",
		PathPattern:        "/v2/alerts_channels.json",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &V2AlertsChannelsJSONGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*V2AlertsChannelsJSONGetOK), nil

}

/*
V2AlertsChannelsJSONPost creates

Create
*/
func (a *Client) V2AlertsChannelsJSONPost(params *V2AlertsChannelsJSONPostParams) (*V2AlertsChannelsJSONPostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewV2AlertsChannelsJSONPostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "V2AlertsChannelsJsonPost",
		Method:             "POST",
		PathPattern:        "/v2/alerts_channels.json",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &V2AlertsChannelsJSONPostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*V2AlertsChannelsJSONPostOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
