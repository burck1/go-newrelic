// Code generated by go-swagger; DO NOT EDIT.

package alerts_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsChannelsJSONPostReader is a Reader for the V2AlertsChannelsJSONPost structure.
type V2AlertsChannelsJSONPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsChannelsJSONPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsChannelsJSONPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsChannelsJSONPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsChannelsJSONPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsChannelsJSONPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsChannelsJSONPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsChannelsJSONPostOK creates a V2AlertsChannelsJSONPostOK with default headers values
func NewV2AlertsChannelsJSONPostOK() *V2AlertsChannelsJSONPostOK {
	return &V2AlertsChannelsJSONPostOK{}
}

/*V2AlertsChannelsJSONPostOK handles this case with default header values.

OK
*/
type V2AlertsChannelsJSONPostOK struct {
	Payload *models.ChannelResponse
}

func (o *V2AlertsChannelsJSONPostOK) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_channels.json][%d] v2AlertsChannelsJsonPostOK  %+v", 200, o.Payload)
}

func (o *V2AlertsChannelsJSONPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONPostUnauthorized creates a V2AlertsChannelsJSONPostUnauthorized with default headers values
func NewV2AlertsChannelsJSONPostUnauthorized() *V2AlertsChannelsJSONPostUnauthorized {
	return &V2AlertsChannelsJSONPostUnauthorized{}
}

/*V2AlertsChannelsJSONPostUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsChannelsJSONPostUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsChannelsJSONPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_channels.json][%d] v2AlertsChannelsJsonPostUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsChannelsJSONPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONPostForbidden creates a V2AlertsChannelsJSONPostForbidden with default headers values
func NewV2AlertsChannelsJSONPostForbidden() *V2AlertsChannelsJSONPostForbidden {
	return &V2AlertsChannelsJSONPostForbidden{}
}

/*V2AlertsChannelsJSONPostForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsChannelsJSONPostForbidden struct {
	Payload interface{}
}

func (o *V2AlertsChannelsJSONPostForbidden) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_channels.json][%d] v2AlertsChannelsJsonPostForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsChannelsJSONPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONPostUnprocessableEntity creates a V2AlertsChannelsJSONPostUnprocessableEntity with default headers values
func NewV2AlertsChannelsJSONPostUnprocessableEntity() *V2AlertsChannelsJSONPostUnprocessableEntity {
	return &V2AlertsChannelsJSONPostUnprocessableEntity{}
}

/*V2AlertsChannelsJSONPostUnprocessableEntity handles this case with default header values.

Validation or internal error occurred
*/
type V2AlertsChannelsJSONPostUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsChannelsJSONPostUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_channels.json][%d] v2AlertsChannelsJsonPostUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsChannelsJSONPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsChannelsJSONPostDefault creates a V2AlertsChannelsJSONPostDefault with default headers values
func NewV2AlertsChannelsJSONPostDefault(code int) *V2AlertsChannelsJSONPostDefault {
	return &V2AlertsChannelsJSONPostDefault{
		_statusCode: code,
	}
}

/*V2AlertsChannelsJSONPostDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsChannelsJSONPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts channels Json post default response
func (o *V2AlertsChannelsJSONPostDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsChannelsJSONPostDefault) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_channels.json][%d] V2AlertsChannelsJsonPost default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsChannelsJSONPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
