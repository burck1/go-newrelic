// Code generated by go-swagger; DO NOT EDIT.

package application_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewV2ApplicationsInstancesJSONByApplicationIDGetParams creates a new V2ApplicationsInstancesJSONByApplicationIDGetParams object
// with the default values initialized.
func NewV2ApplicationsInstancesJSONByApplicationIDGetParams() *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsInstancesJSONByApplicationIDGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2ApplicationsInstancesJSONByApplicationIDGetParamsWithTimeout creates a new V2ApplicationsInstancesJSONByApplicationIDGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2ApplicationsInstancesJSONByApplicationIDGetParamsWithTimeout(timeout time.Duration) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsInstancesJSONByApplicationIDGetParams{

		timeout: timeout,
	}
}

// NewV2ApplicationsInstancesJSONByApplicationIDGetParamsWithContext creates a new V2ApplicationsInstancesJSONByApplicationIDGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2ApplicationsInstancesJSONByApplicationIDGetParamsWithContext(ctx context.Context) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsInstancesJSONByApplicationIDGetParams{

		Context: ctx,
	}
}

// NewV2ApplicationsInstancesJSONByApplicationIDGetParamsWithHTTPClient creates a new V2ApplicationsInstancesJSONByApplicationIDGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2ApplicationsInstancesJSONByApplicationIDGetParamsWithHTTPClient(client *http.Client) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsInstancesJSONByApplicationIDGetParams{
		HTTPClient: client,
	}
}

/*V2ApplicationsInstancesJSONByApplicationIDGetParams contains all the parameters to send to the API endpoint
for the v2 applications instances Json by application Id get operation typically these are written to a http.Request
*/
type V2ApplicationsInstancesJSONByApplicationIDGetParams struct {

	/*ApplicationID
	  Application ID

	*/
	ApplicationID int64
	/*FilterHostname
	  Filter by server hostname

	*/
	FilterHostname *string
	/*FilterIds
	  Filter by application instance ids

	*/
	FilterIds []int64
	/*Page
	  Pagination index

	*/
	Page *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WithTimeout(timeout time.Duration) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WithContext(ctx context.Context) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WithHTTPClient(client *http.Client) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationID adds the applicationID to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WithApplicationID(applicationID int64) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	o.SetApplicationID(applicationID)
	return o
}

// SetApplicationID adds the applicationId to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) SetApplicationID(applicationID int64) {
	o.ApplicationID = applicationID
}

// WithFilterHostname adds the filterHostname to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WithFilterHostname(filterHostname *string) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	o.SetFilterHostname(filterHostname)
	return o
}

// SetFilterHostname adds the filterHostname to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) SetFilterHostname(filterHostname *string) {
	o.FilterHostname = filterHostname
}

// WithFilterIds adds the filterIds to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WithFilterIds(filterIds []int64) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	o.SetFilterIds(filterIds)
	return o
}

// SetFilterIds adds the filterIds to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) SetFilterIds(filterIds []int64) {
	o.FilterIds = filterIds
}

// WithPage adds the page to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WithPage(page *int64) *V2ApplicationsInstancesJSONByApplicationIDGetParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the v2 applications instances Json by application Id get params
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) SetPage(page *int64) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *V2ApplicationsInstancesJSONByApplicationIDGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param application_id
	if err := r.SetPathParam("application_id", swag.FormatInt64(o.ApplicationID)); err != nil {
		return err
	}

	if o.FilterHostname != nil {

		// query param filter[hostname]
		var qrFilterHostname string
		if o.FilterHostname != nil {
			qrFilterHostname = *o.FilterHostname
		}
		qFilterHostname := qrFilterHostname
		if qFilterHostname != "" {
			if err := r.SetQueryParam("filter[hostname]", qFilterHostname); err != nil {
				return err
			}
		}

	}

	var valuesFilterIds []string
	for _, v := range o.FilterIds {
		valuesFilterIds = append(valuesFilterIds, swag.FormatInt64(v))
	}

	joinedFilterIds := swag.JoinByFormat(valuesFilterIds, "csv")
	// query array param filter[ids]
	if err := r.SetQueryParam("filter[ids]", joinedFilterIds...); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
