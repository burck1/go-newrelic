// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ApplicationsJSONByIDGetReader is a Reader for the V2ApplicationsJSONByIDGet structure.
type V2ApplicationsJSONByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ApplicationsJSONByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ApplicationsJSONByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ApplicationsJSONByIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ApplicationsJSONByIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2ApplicationsJSONByIDGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ApplicationsJSONByIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ApplicationsJSONByIDGetOK creates a V2ApplicationsJSONByIDGetOK with default headers values
func NewV2ApplicationsJSONByIDGetOK() *V2ApplicationsJSONByIDGetOK {
	return &V2ApplicationsJSONByIDGetOK{}
}

/*V2ApplicationsJSONByIDGetOK handles this case with default header values.

OK
*/
type V2ApplicationsJSONByIDGetOK struct {
	Payload *models.ApplicationResponse
}

func (o *V2ApplicationsJSONByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}.json][%d] v2ApplicationsJsonByIdGetOK  %+v", 200, o.Payload)
}

func (o *V2ApplicationsJSONByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplicationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsJSONByIDGetUnauthorized creates a V2ApplicationsJSONByIDGetUnauthorized with default headers values
func NewV2ApplicationsJSONByIDGetUnauthorized() *V2ApplicationsJSONByIDGetUnauthorized {
	return &V2ApplicationsJSONByIDGetUnauthorized{}
}

/*V2ApplicationsJSONByIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ApplicationsJSONByIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2ApplicationsJSONByIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}.json][%d] v2ApplicationsJsonByIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ApplicationsJSONByIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsJSONByIDGetForbidden creates a V2ApplicationsJSONByIDGetForbidden with default headers values
func NewV2ApplicationsJSONByIDGetForbidden() *V2ApplicationsJSONByIDGetForbidden {
	return &V2ApplicationsJSONByIDGetForbidden{}
}

/*V2ApplicationsJSONByIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ApplicationsJSONByIDGetForbidden struct {
	Payload interface{}
}

func (o *V2ApplicationsJSONByIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}.json][%d] v2ApplicationsJsonByIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2ApplicationsJSONByIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsJSONByIDGetNotFound creates a V2ApplicationsJSONByIDGetNotFound with default headers values
func NewV2ApplicationsJSONByIDGetNotFound() *V2ApplicationsJSONByIDGetNotFound {
	return &V2ApplicationsJSONByIDGetNotFound{}
}

/*V2ApplicationsJSONByIDGetNotFound handles this case with default header values.

No Application found with the given ID
*/
type V2ApplicationsJSONByIDGetNotFound struct {
	Payload interface{}
}

func (o *V2ApplicationsJSONByIDGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}.json][%d] v2ApplicationsJsonByIdGetNotFound  %+v", 404, o.Payload)
}

func (o *V2ApplicationsJSONByIDGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsJSONByIDGetDefault creates a V2ApplicationsJSONByIDGetDefault with default headers values
func NewV2ApplicationsJSONByIDGetDefault(code int) *V2ApplicationsJSONByIDGetDefault {
	return &V2ApplicationsJSONByIDGetDefault{
		_statusCode: code,
	}
}

/*V2ApplicationsJSONByIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ApplicationsJSONByIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 applications Json by Id get default response
func (o *V2ApplicationsJSONByIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2ApplicationsJSONByIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}.json][%d] V2ApplicationsJsonByIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2ApplicationsJSONByIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
