// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewV2ApplicationsMetricsJSONByApplicationIDGetParams creates a new V2ApplicationsMetricsJSONByApplicationIDGetParams object
// with the default values initialized.
func NewV2ApplicationsMetricsJSONByApplicationIDGetParams() *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsMetricsJSONByApplicationIDGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2ApplicationsMetricsJSONByApplicationIDGetParamsWithTimeout creates a new V2ApplicationsMetricsJSONByApplicationIDGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2ApplicationsMetricsJSONByApplicationIDGetParamsWithTimeout(timeout time.Duration) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsMetricsJSONByApplicationIDGetParams{

		timeout: timeout,
	}
}

// NewV2ApplicationsMetricsJSONByApplicationIDGetParamsWithContext creates a new V2ApplicationsMetricsJSONByApplicationIDGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2ApplicationsMetricsJSONByApplicationIDGetParamsWithContext(ctx context.Context) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsMetricsJSONByApplicationIDGetParams{

		Context: ctx,
	}
}

// NewV2ApplicationsMetricsJSONByApplicationIDGetParamsWithHTTPClient creates a new V2ApplicationsMetricsJSONByApplicationIDGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2ApplicationsMetricsJSONByApplicationIDGetParamsWithHTTPClient(client *http.Client) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	var ()
	return &V2ApplicationsMetricsJSONByApplicationIDGetParams{
		HTTPClient: client,
	}
}

/*V2ApplicationsMetricsJSONByApplicationIDGetParams contains all the parameters to send to the API endpoint
for the v2 applications metrics Json by application Id get operation typically these are written to a http.Request
*/
type V2ApplicationsMetricsJSONByApplicationIDGetParams struct {

	/*ApplicationID
	  Application ID

	*/
	ApplicationID int64
	/*Cursor
	  Cursor for next page (replacing page param)

	*/
	Cursor *string
	/*Name
	  Filter metrics by name

	*/
	Name *string
	/*Page
	  Pagination index (will be deprecated)

	*/
	Page *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WithTimeout(timeout time.Duration) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WithContext(ctx context.Context) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WithHTTPClient(client *http.Client) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationID adds the applicationID to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WithApplicationID(applicationID int64) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	o.SetApplicationID(applicationID)
	return o
}

// SetApplicationID adds the applicationId to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) SetApplicationID(applicationID int64) {
	o.ApplicationID = applicationID
}

// WithCursor adds the cursor to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WithCursor(cursor *string) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	o.SetCursor(cursor)
	return o
}

// SetCursor adds the cursor to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) SetCursor(cursor *string) {
	o.Cursor = cursor
}

// WithName adds the name to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WithName(name *string) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) SetName(name *string) {
	o.Name = name
}

// WithPage adds the page to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WithPage(page *int64) *V2ApplicationsMetricsJSONByApplicationIDGetParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the v2 applications metrics Json by application Id get params
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) SetPage(page *int64) {
	o.Page = page
}

// WriteToRequest writes these params to a swagger request
func (o *V2ApplicationsMetricsJSONByApplicationIDGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param application_id
	if err := r.SetPathParam("application_id", swag.FormatInt64(o.ApplicationID)); err != nil {
		return err
	}

	if o.Cursor != nil {

		// query param cursor
		var qrCursor string
		if o.Cursor != nil {
			qrCursor = *o.Cursor
		}
		qCursor := qrCursor
		if qCursor != "" {
			if err := r.SetQueryParam("cursor", qCursor); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
