// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2ApplicationsMetricsJSONByApplicationIDGetReader is a Reader for the V2ApplicationsMetricsJSONByApplicationIDGet structure.
type V2ApplicationsMetricsJSONByApplicationIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2ApplicationsMetricsJSONByApplicationIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2ApplicationsMetricsJSONByApplicationIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2ApplicationsMetricsJSONByApplicationIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2ApplicationsMetricsJSONByApplicationIDGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2ApplicationsMetricsJSONByApplicationIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2ApplicationsMetricsJSONByApplicationIDGetOK creates a V2ApplicationsMetricsJSONByApplicationIDGetOK with default headers values
func NewV2ApplicationsMetricsJSONByApplicationIDGetOK() *V2ApplicationsMetricsJSONByApplicationIDGetOK {
	return &V2ApplicationsMetricsJSONByApplicationIDGetOK{}
}

/*V2ApplicationsMetricsJSONByApplicationIDGetOK handles this case with default header values.

OK
*/
type V2ApplicationsMetricsJSONByApplicationIDGetOK struct {
	Payload *models.MetricParserResponse
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/metrics.json][%d] v2ApplicationsMetricsJsonByApplicationIdGetOK  %+v", 200, o.Payload)
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetricParserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsMetricsJSONByApplicationIDGetUnauthorized creates a V2ApplicationsMetricsJSONByApplicationIDGetUnauthorized with default headers values
func NewV2ApplicationsMetricsJSONByApplicationIDGetUnauthorized() *V2ApplicationsMetricsJSONByApplicationIDGetUnauthorized {
	return &V2ApplicationsMetricsJSONByApplicationIDGetUnauthorized{}
}

/*V2ApplicationsMetricsJSONByApplicationIDGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2ApplicationsMetricsJSONByApplicationIDGetUnauthorized struct {
	Payload interface{}
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/metrics.json][%d] v2ApplicationsMetricsJsonByApplicationIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsMetricsJSONByApplicationIDGetForbidden creates a V2ApplicationsMetricsJSONByApplicationIDGetForbidden with default headers values
func NewV2ApplicationsMetricsJSONByApplicationIDGetForbidden() *V2ApplicationsMetricsJSONByApplicationIDGetForbidden {
	return &V2ApplicationsMetricsJSONByApplicationIDGetForbidden{}
}

/*V2ApplicationsMetricsJSONByApplicationIDGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2ApplicationsMetricsJSONByApplicationIDGetForbidden struct {
	Payload interface{}
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/metrics.json][%d] v2ApplicationsMetricsJsonByApplicationIdGetForbidden  %+v", 403, o.Payload)
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2ApplicationsMetricsJSONByApplicationIDGetDefault creates a V2ApplicationsMetricsJSONByApplicationIDGetDefault with default headers values
func NewV2ApplicationsMetricsJSONByApplicationIDGetDefault(code int) *V2ApplicationsMetricsJSONByApplicationIDGetDefault {
	return &V2ApplicationsMetricsJSONByApplicationIDGetDefault{
		_statusCode: code,
	}
}

/*V2ApplicationsMetricsJSONByApplicationIDGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2ApplicationsMetricsJSONByApplicationIDGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 applications metrics Json by application Id get default response
func (o *V2ApplicationsMetricsJSONByApplicationIDGetDefault) Code() int {
	return o._statusCode
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/applications/{application_id}/metrics.json][%d] V2ApplicationsMetricsJsonByApplicationIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2ApplicationsMetricsJSONByApplicationIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
