// Code generated by go-swagger; DO NOT EDIT.

package mobile_applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new mobile applications API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for mobile applications API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
V2MobileApplicationsJSONByIDGet shows

Show
*/
func (a *Client) V2MobileApplicationsJSONByIDGet(params *V2MobileApplicationsJSONByIDGetParams) (*V2MobileApplicationsJSONByIDGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewV2MobileApplicationsJSONByIDGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "V2MobileApplicationsJsonByIdGet",
		Method:             "GET",
		PathPattern:        "/v2/mobile_applications/{mobile_application_id}.json",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &V2MobileApplicationsJSONByIDGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*V2MobileApplicationsJSONByIDGetOK), nil

}

/*
V2MobileApplicationsJSONGet lists

List
*/
func (a *Client) V2MobileApplicationsJSONGet(params *V2MobileApplicationsJSONGetParams) (*V2MobileApplicationsJSONGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewV2MobileApplicationsJSONGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "V2MobileApplicationsJsonGet",
		Method:             "GET",
		PathPattern:        "/v2/mobile_applications.json",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &V2MobileApplicationsJSONGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*V2MobileApplicationsJSONGetOK), nil

}

/*
V2MobileApplicationsMetricsDataJSONByMobileApplicationIDGet metrics data

Metric Data
*/
func (a *Client) V2MobileApplicationsMetricsDataJSONByMobileApplicationIDGet(params *V2MobileApplicationsMetricsDataJSONByMobileApplicationIDGetParams) (*V2MobileApplicationsMetricsDataJSONByMobileApplicationIDGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewV2MobileApplicationsMetricsDataJSONByMobileApplicationIDGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "V2MobileApplicationsMetricsDataJsonByMobileApplicationIdGet",
		Method:             "GET",
		PathPattern:        "/v2/mobile_applications/{mobile_application_id}/metrics/data.json",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &V2MobileApplicationsMetricsDataJSONByMobileApplicationIDGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*V2MobileApplicationsMetricsDataJSONByMobileApplicationIDGetOK), nil

}

/*
V2MobileApplicationsMetricsJSONByMobileApplicationIDGet metrics names

Metric Names
*/
func (a *Client) V2MobileApplicationsMetricsJSONByMobileApplicationIDGet(params *V2MobileApplicationsMetricsJSONByMobileApplicationIDGetParams) (*V2MobileApplicationsMetricsJSONByMobileApplicationIDGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewV2MobileApplicationsMetricsJSONByMobileApplicationIDGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "V2MobileApplicationsMetricsJsonByMobileApplicationIdGet",
		Method:             "GET",
		PathPattern:        "/v2/mobile_applications/{mobile_application_id}/metrics.json",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &V2MobileApplicationsMetricsJSONByMobileApplicationIDGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*V2MobileApplicationsMetricsJSONByMobileApplicationIDGetOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
