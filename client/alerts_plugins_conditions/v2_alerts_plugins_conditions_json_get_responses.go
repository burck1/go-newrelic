// Code generated by go-swagger; DO NOT EDIT.

package alerts_plugins_conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsPluginsConditionsJSONGetReader is a Reader for the V2AlertsPluginsConditionsJSONGet structure.
type V2AlertsPluginsConditionsJSONGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsPluginsConditionsJSONGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsPluginsConditionsJSONGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsPluginsConditionsJSONGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsPluginsConditionsJSONGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsPluginsConditionsJSONGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsPluginsConditionsJSONGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsPluginsConditionsJSONGetOK creates a V2AlertsPluginsConditionsJSONGetOK with default headers values
func NewV2AlertsPluginsConditionsJSONGetOK() *V2AlertsPluginsConditionsJSONGetOK {
	return &V2AlertsPluginsConditionsJSONGetOK{}
}

/*V2AlertsPluginsConditionsJSONGetOK handles this case with default header values.

OK
*/
type V2AlertsPluginsConditionsJSONGetOK struct {
	Payload *models.PluginsConditionResponse
}

func (o *V2AlertsPluginsConditionsJSONGetOK) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_plugins_conditions.json][%d] v2AlertsPluginsConditionsJsonGetOK  %+v", 200, o.Payload)
}

func (o *V2AlertsPluginsConditionsJSONGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PluginsConditionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsJSONGetUnauthorized creates a V2AlertsPluginsConditionsJSONGetUnauthorized with default headers values
func NewV2AlertsPluginsConditionsJSONGetUnauthorized() *V2AlertsPluginsConditionsJSONGetUnauthorized {
	return &V2AlertsPluginsConditionsJSONGetUnauthorized{}
}

/*V2AlertsPluginsConditionsJSONGetUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsPluginsConditionsJSONGetUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsPluginsConditionsJSONGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_plugins_conditions.json][%d] v2AlertsPluginsConditionsJsonGetUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsPluginsConditionsJSONGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsJSONGetForbidden creates a V2AlertsPluginsConditionsJSONGetForbidden with default headers values
func NewV2AlertsPluginsConditionsJSONGetForbidden() *V2AlertsPluginsConditionsJSONGetForbidden {
	return &V2AlertsPluginsConditionsJSONGetForbidden{}
}

/*V2AlertsPluginsConditionsJSONGetForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsPluginsConditionsJSONGetForbidden struct {
	Payload interface{}
}

func (o *V2AlertsPluginsConditionsJSONGetForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_plugins_conditions.json][%d] v2AlertsPluginsConditionsJsonGetForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsPluginsConditionsJSONGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsJSONGetNotFound creates a V2AlertsPluginsConditionsJSONGetNotFound with default headers values
func NewV2AlertsPluginsConditionsJSONGetNotFound() *V2AlertsPluginsConditionsJSONGetNotFound {
	return &V2AlertsPluginsConditionsJSONGetNotFound{}
}

/*V2AlertsPluginsConditionsJSONGetNotFound handles this case with default header values.

No Alerts policy was found for the given ID
*/
type V2AlertsPluginsConditionsJSONGetNotFound struct {
	Payload interface{}
}

func (o *V2AlertsPluginsConditionsJSONGetNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_plugins_conditions.json][%d] v2AlertsPluginsConditionsJsonGetNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsPluginsConditionsJSONGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsJSONGetDefault creates a V2AlertsPluginsConditionsJSONGetDefault with default headers values
func NewV2AlertsPluginsConditionsJSONGetDefault(code int) *V2AlertsPluginsConditionsJSONGetDefault {
	return &V2AlertsPluginsConditionsJSONGetDefault{
		_statusCode: code,
	}
}

/*V2AlertsPluginsConditionsJSONGetDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsPluginsConditionsJSONGetDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts plugins conditions Json get default response
func (o *V2AlertsPluginsConditionsJSONGetDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsPluginsConditionsJSONGetDefault) Error() string {
	return fmt.Sprintf("[GET /v2/alerts_plugins_conditions.json][%d] V2AlertsPluginsConditionsJsonGet default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsPluginsConditionsJSONGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
