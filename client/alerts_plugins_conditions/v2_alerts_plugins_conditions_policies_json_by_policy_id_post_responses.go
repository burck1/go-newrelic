// Code generated by go-swagger; DO NOT EDIT.

package alerts_plugins_conditions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostReader is a Reader for the V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPost structure.
type V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK creates a V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK with default headers values
func NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK() *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK {
	return &V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK{}
}

/*V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK handles this case with default header values.

OK
*/
type V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK struct {
	Payload *models.PluginsConditionResponse
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_plugins_conditions/policies/{policy_id}.json][%d] v2AlertsPluginsConditionsPoliciesJsonByPolicyIdPostOK  %+v", 200, o.Payload)
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PluginsConditionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized creates a V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized with default headers values
func NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized() *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized {
	return &V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized{}
}

/*V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_plugins_conditions/policies/{policy_id}.json][%d] v2AlertsPluginsConditionsPoliciesJsonByPolicyIdPostUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden creates a V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden with default headers values
func NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden() *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden {
	return &V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden{}
}

/*V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden struct {
	Payload interface{}
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_plugins_conditions/policies/{policy_id}.json][%d] v2AlertsPluginsConditionsPoliciesJsonByPolicyIdPostForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound creates a V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound with default headers values
func NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound() *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound {
	return &V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound{}
}

/*V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound handles this case with default header values.

No alert policy was found with the given ID
*/
type V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound struct {
	Payload interface{}
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_plugins_conditions/policies/{policy_id}.json][%d] v2AlertsPluginsConditionsPoliciesJsonByPolicyIdPostNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity creates a V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity with default headers values
func NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity() *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity {
	return &V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity{}
}

/*V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity handles this case with default header values.

Validation error occurred while trying to create the alert condition
*/
type V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_plugins_conditions/policies/{policy_id}.json][%d] v2AlertsPluginsConditionsPoliciesJsonByPolicyIdPostUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault creates a V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault with default headers values
func NewV2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault(code int) *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault {
	return &V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault{
		_statusCode: code,
	}
}

/*V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts plugins conditions policies Json by policy Id post default response
func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault) Error() string {
	return fmt.Sprintf("[POST /v2/alerts_plugins_conditions/policies/{policy_id}.json][%d] V2AlertsPluginsConditionsPoliciesJsonByPolicyIdPost default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsPluginsConditionsPoliciesJSONByPolicyIDPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
