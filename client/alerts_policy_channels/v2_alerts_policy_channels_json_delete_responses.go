// Code generated by go-swagger; DO NOT EDIT.

package alerts_policy_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/burck1/go-newrelic/models"
)

// V2AlertsPolicyChannelsJSONDeleteReader is a Reader for the V2AlertsPolicyChannelsJSONDelete structure.
type V2AlertsPolicyChannelsJSONDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *V2AlertsPolicyChannelsJSONDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewV2AlertsPolicyChannelsJSONDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewV2AlertsPolicyChannelsJSONDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewV2AlertsPolicyChannelsJSONDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewV2AlertsPolicyChannelsJSONDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewV2AlertsPolicyChannelsJSONDeleteUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewV2AlertsPolicyChannelsJSONDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewV2AlertsPolicyChannelsJSONDeleteOK creates a V2AlertsPolicyChannelsJSONDeleteOK with default headers values
func NewV2AlertsPolicyChannelsJSONDeleteOK() *V2AlertsPolicyChannelsJSONDeleteOK {
	return &V2AlertsPolicyChannelsJSONDeleteOK{}
}

/*V2AlertsPolicyChannelsJSONDeleteOK handles this case with default header values.

OK
*/
type V2AlertsPolicyChannelsJSONDeleteOK struct {
	Payload *models.ChannelResponse
}

func (o *V2AlertsPolicyChannelsJSONDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /v2/alerts_policy_channels.json][%d] v2AlertsPolicyChannelsJsonDeleteOK  %+v", 200, o.Payload)
}

func (o *V2AlertsPolicyChannelsJSONDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChannelResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPolicyChannelsJSONDeleteUnauthorized creates a V2AlertsPolicyChannelsJSONDeleteUnauthorized with default headers values
func NewV2AlertsPolicyChannelsJSONDeleteUnauthorized() *V2AlertsPolicyChannelsJSONDeleteUnauthorized {
	return &V2AlertsPolicyChannelsJSONDeleteUnauthorized{}
}

/*V2AlertsPolicyChannelsJSONDeleteUnauthorized handles this case with default header values.

Invalid API key
*/
type V2AlertsPolicyChannelsJSONDeleteUnauthorized struct {
	Payload interface{}
}

func (o *V2AlertsPolicyChannelsJSONDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v2/alerts_policy_channels.json][%d] v2AlertsPolicyChannelsJsonDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *V2AlertsPolicyChannelsJSONDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPolicyChannelsJSONDeleteForbidden creates a V2AlertsPolicyChannelsJSONDeleteForbidden with default headers values
func NewV2AlertsPolicyChannelsJSONDeleteForbidden() *V2AlertsPolicyChannelsJSONDeleteForbidden {
	return &V2AlertsPolicyChannelsJSONDeleteForbidden{}
}

/*V2AlertsPolicyChannelsJSONDeleteForbidden handles this case with default header values.

New Relic API access has not been enabled
*/
type V2AlertsPolicyChannelsJSONDeleteForbidden struct {
	Payload interface{}
}

func (o *V2AlertsPolicyChannelsJSONDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v2/alerts_policy_channels.json][%d] v2AlertsPolicyChannelsJsonDeleteForbidden  %+v", 403, o.Payload)
}

func (o *V2AlertsPolicyChannelsJSONDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPolicyChannelsJSONDeleteNotFound creates a V2AlertsPolicyChannelsJSONDeleteNotFound with default headers values
func NewV2AlertsPolicyChannelsJSONDeleteNotFound() *V2AlertsPolicyChannelsJSONDeleteNotFound {
	return &V2AlertsPolicyChannelsJSONDeleteNotFound{}
}

/*V2AlertsPolicyChannelsJSONDeleteNotFound handles this case with default header values.

No policy channel found with the given ID
*/
type V2AlertsPolicyChannelsJSONDeleteNotFound struct {
	Payload interface{}
}

func (o *V2AlertsPolicyChannelsJSONDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v2/alerts_policy_channels.json][%d] v2AlertsPolicyChannelsJsonDeleteNotFound  %+v", 404, o.Payload)
}

func (o *V2AlertsPolicyChannelsJSONDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPolicyChannelsJSONDeleteUnprocessableEntity creates a V2AlertsPolicyChannelsJSONDeleteUnprocessableEntity with default headers values
func NewV2AlertsPolicyChannelsJSONDeleteUnprocessableEntity() *V2AlertsPolicyChannelsJSONDeleteUnprocessableEntity {
	return &V2AlertsPolicyChannelsJSONDeleteUnprocessableEntity{}
}

/*V2AlertsPolicyChannelsJSONDeleteUnprocessableEntity handles this case with default header values.

Validation or internal error occurred while trying to delete the policy channels
*/
type V2AlertsPolicyChannelsJSONDeleteUnprocessableEntity struct {
	Payload interface{}
}

func (o *V2AlertsPolicyChannelsJSONDeleteUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /v2/alerts_policy_channels.json][%d] v2AlertsPolicyChannelsJsonDeleteUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *V2AlertsPolicyChannelsJSONDeleteUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewV2AlertsPolicyChannelsJSONDeleteDefault creates a V2AlertsPolicyChannelsJSONDeleteDefault with default headers values
func NewV2AlertsPolicyChannelsJSONDeleteDefault(code int) *V2AlertsPolicyChannelsJSONDeleteDefault {
	return &V2AlertsPolicyChannelsJSONDeleteDefault{
		_statusCode: code,
	}
}

/*V2AlertsPolicyChannelsJSONDeleteDefault handles this case with default header values.

A server error occurred, please contact <a href="http://support.newrelic.com">New Relic support</a>
*/
type V2AlertsPolicyChannelsJSONDeleteDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the v2 alerts policy channels Json delete default response
func (o *V2AlertsPolicyChannelsJSONDeleteDefault) Code() int {
	return o._statusCode
}

func (o *V2AlertsPolicyChannelsJSONDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /v2/alerts_policy_channels.json][%d] V2AlertsPolicyChannelsJsonDelete default  %+v", o._statusCode, o.Payload)
}

func (o *V2AlertsPolicyChannelsJSONDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
