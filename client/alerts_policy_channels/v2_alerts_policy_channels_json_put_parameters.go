// Code generated by go-swagger; DO NOT EDIT.

package alerts_policy_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewV2AlertsPolicyChannelsJSONPutParams creates a new V2AlertsPolicyChannelsJSONPutParams object
// with the default values initialized.
func NewV2AlertsPolicyChannelsJSONPutParams() *V2AlertsPolicyChannelsJSONPutParams {
	var ()
	return &V2AlertsPolicyChannelsJSONPutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewV2AlertsPolicyChannelsJSONPutParamsWithTimeout creates a new V2AlertsPolicyChannelsJSONPutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewV2AlertsPolicyChannelsJSONPutParamsWithTimeout(timeout time.Duration) *V2AlertsPolicyChannelsJSONPutParams {
	var ()
	return &V2AlertsPolicyChannelsJSONPutParams{

		timeout: timeout,
	}
}

// NewV2AlertsPolicyChannelsJSONPutParamsWithContext creates a new V2AlertsPolicyChannelsJSONPutParams object
// with the default values initialized, and the ability to set a context for a request
func NewV2AlertsPolicyChannelsJSONPutParamsWithContext(ctx context.Context) *V2AlertsPolicyChannelsJSONPutParams {
	var ()
	return &V2AlertsPolicyChannelsJSONPutParams{

		Context: ctx,
	}
}

// NewV2AlertsPolicyChannelsJSONPutParamsWithHTTPClient creates a new V2AlertsPolicyChannelsJSONPutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewV2AlertsPolicyChannelsJSONPutParamsWithHTTPClient(client *http.Client) *V2AlertsPolicyChannelsJSONPutParams {
	var ()
	return &V2AlertsPolicyChannelsJSONPutParams{
		HTTPClient: client,
	}
}

/*V2AlertsPolicyChannelsJSONPutParams contains all the parameters to send to the API endpoint
for the v2 alerts policy channels Json put operation typically these are written to a http.Request
*/
type V2AlertsPolicyChannelsJSONPutParams struct {

	/*ChannelIds
	  Channel IDs

	*/
	ChannelIds []int64
	/*PolicyID
	  Policy ID

	*/
	PolicyID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) WithTimeout(timeout time.Duration) *V2AlertsPolicyChannelsJSONPutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) WithContext(ctx context.Context) *V2AlertsPolicyChannelsJSONPutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) WithHTTPClient(client *http.Client) *V2AlertsPolicyChannelsJSONPutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChannelIds adds the channelIds to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) WithChannelIds(channelIds []int64) *V2AlertsPolicyChannelsJSONPutParams {
	o.SetChannelIds(channelIds)
	return o
}

// SetChannelIds adds the channelIds to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) SetChannelIds(channelIds []int64) {
	o.ChannelIds = channelIds
}

// WithPolicyID adds the policyID to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) WithPolicyID(policyID int64) *V2AlertsPolicyChannelsJSONPutParams {
	o.SetPolicyID(policyID)
	return o
}

// SetPolicyID adds the policyId to the v2 alerts policy channels Json put params
func (o *V2AlertsPolicyChannelsJSONPutParams) SetPolicyID(policyID int64) {
	o.PolicyID = policyID
}

// WriteToRequest writes these params to a swagger request
func (o *V2AlertsPolicyChannelsJSONPutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	var valuesChannelIds []string
	for _, v := range o.ChannelIds {
		valuesChannelIds = append(valuesChannelIds, swag.FormatInt64(v))
	}

	joinedChannelIds := swag.JoinByFormat(valuesChannelIds, "csv")
	// query array param channel_ids
	if err := r.SetQueryParam("channel_ids", joinedChannelIds...); err != nil {
		return err
	}

	// query param policy_id
	qrPolicyID := o.PolicyID
	qPolicyID := swag.FormatInt64(qrPolicyID)
	if qPolicyID != "" {
		if err := r.SetQueryParam("policy_id", qPolicyID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
