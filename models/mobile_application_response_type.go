// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// MobileApplicationResponseType MobileApplicationResponseType
// swagger:model MobileApplicationResponseType
type MobileApplicationResponseType struct {

	// crash summary
	CrashSummary *CrashSummaryResponse `json:"crash_summary,omitempty"`

	// health status
	HealthStatus string `json:"health_status,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// mobile summary
	MobileSummary *MobileSummaryDataResponse `json:"mobile_summary,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// reporting
	Reporting bool `json:"reporting,omitempty"`
}

// Validate validates this mobile application response type
func (m *MobileApplicationResponseType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCrashSummary(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMobileSummary(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MobileApplicationResponseType) validateCrashSummary(formats strfmt.Registry) error {

	if swag.IsZero(m.CrashSummary) { // not required
		return nil
	}

	if m.CrashSummary != nil {
		if err := m.CrashSummary.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("crash_summary")
			}
			return err
		}
	}

	return nil
}

func (m *MobileApplicationResponseType) validateMobileSummary(formats strfmt.Registry) error {

	if swag.IsZero(m.MobileSummary) { // not required
		return nil
	}

	if m.MobileSummary != nil {
		if err := m.MobileSummary.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mobile_summary")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MobileApplicationResponseType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MobileApplicationResponseType) UnmarshalBinary(b []byte) error {
	var res MobileApplicationResponseType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
