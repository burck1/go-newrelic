// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DashboardBody DashboardBody
// swagger:model DashboardBody
type DashboardBody struct {

	// editable
	Editable string `json:"editable,omitempty"`

	// filter
	Filter *DashboardBodyFilter `json:"filter,omitempty"`

	// icon
	Icon string `json:"icon,omitempty"`

	// metadata
	Metadata *DashboardBodyMetadata `json:"metadata,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// visibility
	Visibility string `json:"visibility,omitempty"`

	// widgets
	Widgets []interface{} `json:"widgets"`
}

// Validate validates this dashboard body
func (m *DashboardBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFilter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DashboardBody) validateFilter(formats strfmt.Registry) error {

	if swag.IsZero(m.Filter) { // not required
		return nil
	}

	if m.Filter != nil {
		if err := m.Filter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("filter")
			}
			return err
		}
	}

	return nil
}

func (m *DashboardBody) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DashboardBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DashboardBody) UnmarshalBinary(b []byte) error {
	var res DashboardBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DashboardBodyFilter dashboard body filter
// swagger:model DashboardBodyFilter
type DashboardBodyFilter struct {

	// attributes
	Attributes []string `json:"attributes"`

	// event types
	EventTypes []string `json:"event_types"`
}

// Validate validates this dashboard body filter
func (m *DashboardBodyFilter) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DashboardBodyFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DashboardBodyFilter) UnmarshalBinary(b []byte) error {
	var res DashboardBodyFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// DashboardBodyMetadata dashboard body metadata
// swagger:model DashboardBodyMetadata
type DashboardBodyMetadata struct {

	// version
	Version int64 `json:"version,omitempty"`
}

// Validate validates this dashboard body metadata
func (m *DashboardBodyMetadata) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DashboardBodyMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DashboardBodyMetadata) UnmarshalBinary(b []byte) error {
	var res DashboardBodyMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
