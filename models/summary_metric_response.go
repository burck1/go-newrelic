// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SummaryMetricResponse SummaryMetricResponse
// swagger:model SummaryMetricResponse
type SummaryMetricResponse struct {

	// id
	ID int32 `json:"id,omitempty"`

	// metric
	Metric string `json:"metric,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// thresholds
	Thresholds *SummaryMetricThresholdResponse `json:"thresholds,omitempty"`

	// value function
	ValueFunction string `json:"value_function,omitempty"`

	// values
	Values *SummaryMetricValuesResponse `json:"values,omitempty"`
}

// Validate validates this summary metric response
func (m *SummaryMetricResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateThresholds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SummaryMetricResponse) validateThresholds(formats strfmt.Registry) error {

	if swag.IsZero(m.Thresholds) { // not required
		return nil
	}

	if m.Thresholds != nil {
		if err := m.Thresholds.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("thresholds")
			}
			return err
		}
	}

	return nil
}

func (m *SummaryMetricResponse) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(m.Values) { // not required
		return nil
	}

	if m.Values != nil {
		if err := m.Values.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("values")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SummaryMetricResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SummaryMetricResponse) UnmarshalBinary(b []byte) error {
	var res SummaryMetricResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
