{
  "apiVersion": "v2",
  "apis": [
    {
      "operations": [
        {
          "consumes": [
            "application/json",
            "application/xml"
          ],
          "errorResponses": [
            {
              "code": 401,
              "reason": "Invalid API key"
            },
            {
              "code": 401,
              "reason": "Invalid request, API key required"
            },
            {
              "code": 403,
              "reason": "New Relic API access has not been enabled"
            },
            {
              "code": 500,
              "reason": "A server error occurred, please contact \u003ca href=\"http://support.newrelic.com\"\u003eNew Relic support\u003c/a\u003e"
            },
            {
              "code": 422,
              "reason": "Internal error occurred while trying to list violations"
            }
          ],
          "httpMethod": "GET",
          "nickname": "list",
          "notes": "\u003cp\u003eThis API endpoint works with new Alerts on alerts.newrelic.com.\u003c/p\u003e\n\n\u003cp\u003eIt returns a list of the violations associated with your New Relic account.\u003c/p\u003e\n\n\u003cp\u003eSee our documentation for a discussion on \u003ca href=\"https://docs.newrelic.com/docs/apis/rest-api-v2/requirements/pagination-api-output\" target=\"_blank\"\u003e\noutput pagination\u003c/a\u003e.\u003c/p\u003e\n\n",
          "nrExtensions": {},
          "parameters": [
            {
              "dataType": "Integer",
              "description": "Pagination index",
              "name": "page",
              "paramType": "query",
              "required": false
            },
            {
              "dataType": "Time",
              "description": "Retrieve violations created after this time",
              "name": "start_date",
              "paramType": "query",
              "required": false
            },
            {
              "dataType": "Time",
              "description": "Retrieve violations created before this time",
              "name": "end_date",
              "paramType": "query",
              "required": false
            },
            {
              "dataType": "Boolean",
              "description": "Filter by open violations",
              "name": "only_open",
              "paramType": "query",
              "required": false
            }
          ],
          "produces": [
            "application/json",
            "application/xml"
          ],
          "responseClass": "ViolationResponse",
          "summary": "List"
        }
      ],
      "path": "/v2/alerts_violations.{format}"
    }
  ],
  "basePath": "https://api.newrelic.com",
  "models": {
    "Violation": {
      "properties": {
        "violation": {
          "type": "ViolationBody"
        }
      }
    },
    "ViolationBody": {
      "properties": {
        "closed_at": {
          "desc": "Closed at for violation",
          "type": "integer",
          "update": true
        },
        "label": {
          "desc": "Label for violation",
          "type": "string",
          "update": true
        },
        "opened_at": {
          "desc": "Opened at for violation",
          "type": "integer",
          "update": true
        }
      }
    },
    "ViolationEntityResponse": {
      "properties": {
        "group_id": {
          "desc": "Group id of the entity",
          "type": "integer"
        },
        "id": {
          "desc": "Entity id",
          "type": "integer"
        },
        "name": {
          "desc": "Entity name",
          "type": "string"
        },
        "product": {
          "desc": "Product the entity is related to",
          "type": "string"
        },
        "type": {
          "desc": "Type of entity",
          "type": "string"
        }
      }
    },
    "ViolationLinksResponse": {
      "properties": {
        "condition_id": {
          "desc": "Condition in which this violation is a member",
          "type": "integer"
        },
        "incident_id": {
          "desc": "Incident in which this violation is a member",
          "type": "integer"
        },
        "policy_id": {
          "desc": "Policy in which this violation is a member",
          "type": "integer"
        }
      }
    },
    "ViolationResponse": {
      "properties": {
        "violation": {
          "type": "ViolationResponseType"
        }
      }
    },
    "ViolationResponseType": {
      "properties": {
        "closed_at": {
          "desc": "Closed at for violation",
          "type": "integer",
          "update": true
        },
        "condition_name": {
          "desc": "Condition name for violation",
          "type": "string"
        },
        "duration": {
          "desc": "Duration of violation",
          "type": "integer"
        },
        "entity": {
          "type": "ViolationEntityResponse"
        },
        "id": {
          "desc": "Violation unique identifier",
          "type": "integer"
        },
        "label": {
          "desc": "Label for violation",
          "type": "string",
          "update": true
        },
        "links": {
          "type": "ViolationLinksResponse"
        },
        "opened_at": {
          "desc": "Opened at for violation",
          "type": "integer",
          "update": true
        },
        "policy_name": {
          "desc": "Policy name for violation",
          "type": "string"
        },
        "priority": {
          "desc": "Severity/priority of violation",
          "type": "string"
        }
      }
    }
  },
  "notes": "\u003cp\u003eThese API endpoints work with the new Alerts on alerts.newrelic.com.\u003c/p\u003e\n\n\u003cp\u003eThe alerts violations provides general information about violations.\nIt allows querying and filtering of violations.\u003c/p\u003e\n",
  "nrExtensions": {},
  "resourcePath": "",
  "swaggerVersion": "1.1"
}